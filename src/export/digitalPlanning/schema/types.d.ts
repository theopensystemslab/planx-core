/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The user who completed the application either for themself or on behalf of someone else
 */
export type Applicant = BaseApplicant | Agent;
/**
 * Address information for the applicant
 */
export type UserAddress =
  | {
      sameAsSiteAddress: true;
    }
  | UserAddressNotSameSite;
export type Email = string;
/**
 * Contact information for the person(s) responsible for maintenance while the works are carried out
 */
export type MaintenanceContact = {
  address: Address;
  contact: {
    company?: {
      name: string;
    };
    email: string;
    name: {
      first: string;
      last: string;
      title?: string;
    };
    phone: string;
  };
  when:
    | "duringConstruction"
    | "afterConstruction"
    | "duringAndAfterConstruction";
}[];
export type Date = string;
/**
 * Names and addresses of all known owners and agricultural tenants, including confirmation or date of notice, or reason requisite notice has not been given if applicable
 */
export type Owners = OwnersNoticeGiven | OwnersNoNoticeGiven | OwnersNoticeDate;
/**
 * Contact information for the site visit
 */
export type SiteContact =
  | {
      role: "applicant" | "agent" | "proxy";
    }
  | SiteContactOther;
/**
 * Information about this planning application
 */
export type ApplicationData = BaseApplicationData | LondonApplicationData;
/**
 * Planning application types
 */
export type ApplicationType =
  | {
      description: "Consent to display an advertisement";
      value: "advertConsent";
    }
  | {
      description: "Consent to make small changes to a project with Planning Permission";
      value: "amendment";
    }
  | {
      description: "Consent to make small (minor material) changes to a project with Planning Permission";
      value: "amendment.minorMaterial";
    }
  | {
      description: "Consent to make small (non-material) changes to a project with Planning Permission";
      value: "amendment.nonMaterial";
    }
  | {
      description: "Planning approval";
      value: "approval";
    }
  | {
      description: "Approval of details reserved by condition";
      value: "approval.conditions";
    }
  | {
      description: "Approval of reserved matters";
      value: "approval.reservedMatters";
    }
  | {
      description: "Written confirmation of compliance with a planning condition";
      value: "complianceConfirmation";
    }
  | {
      description: "Environmental Impact Decision";
      value: "environmentalImpact";
    }
  | {
      description: "Environmental Impact Decision - Scoping";
      value: "environmentalImpact.scoping";
    }
  | {
      description: "Environmental Impact Decision - Screening";
      value: "environmentalImpact.screening";
    }
  | {
      description: "Consent to move and dispose of hazardous substances";
      value: "hazardousSubstanceConsent";
    }
  | {
      description: "Notice to remove a hedge";
      value: "hedgerowRemovalNotice";
    }
  | {
      description: "Consent to do works affecting ordinary watercourses or land drainage";
      value: "landDrainageConsent";
    }
  | {
      description: "Lawful Development Certificate";
      value: "ldc";
    }
  | {
      description: "Lawful Development Certificate - Existing use lawful not to comply with a condition (S191C)";
      value: "ldc.breachOfCondition";
    }
  | {
      description: "Lawful Development Certificate - Existing use";
      value: "ldc.existing";
    }
  | {
      description: "Lawful Development Certificate - Works to a Listed Building (S26H)";
      value: "ldc.listedBuildingWorks";
    }
  | {
      description: "Lawful Development Certificate - Proposed use";
      value: "ldc.proposed";
    }
  | {
      description: "Consent to do works to a Listed Building";
      value: "listed";
    }
  | {
      description: "Notification of completion";
      value: "notifyCompletion";
    }
  | {
      description: "Planning obligation";
      value: "obligation";
    }
  | {
      description: "Discharge a planning obligation";
      value: "obligation.discharge";
    }
  | {
      description: "Modify a planning obligation";
      value: "obligation.modify";
    }
  | {
      description: "Onshore extraction of oil and gas";
      value: "onshoreExtractionOilAndGas";
    }
  | {
      description: "Onshore extraction of oil and gas - Other";
      value: "onshoreExtractionOilAndGas.other";
    }
  | {
      description: "Onshore extraction of oil and gas - Full planning permission for an extension to an existing site including associated development";
      value: "onshoreExtractionOilAndGas.pp.extension";
    }
  | {
      description: "Onshore extraction of oil and gas - Full planning permission for waste development";
      value: "onshoreExtractionOilAndGas.pp.waste";
    }
  | {
      description: "Onshore extraction of oil and gas - Full planning permission for oil and gas working including exploratory, appraisal and production phases";
      value: "onshoreExtractionOilAndGas.pp.working";
    }
  | {
      description: "Onshore extraction of oil and gas - Review of conditions applying to Mineral Permissions (ROMPs)";
      value: "onshoreExtractionOilAndGas.review";
    }
  | {
      description: "Onshore extraction of oil and gas - Variation of conditions";
      value: "onshoreExtractionOilAndGas.variation";
    }
  | {
      description: "Prior Approval";
      value: "pa";
    }
  | {
      description: "Prior Approval - Larger extension to a house";
      value: "pa.part1.classA";
    }
  | {
      description: "Prior Approval - Adding storeys to a house";
      value: "pa.part1.classAA";
    }
  | {
      description: "Prior Approval - Convert a commercial building to mixed use";
      value: "pa.part3.classG";
    }
  | {
      description: "Prior Approval - Convert a mixed use building into a home";
      value: "pa.part3.classM";
    }
  | {
      description: "Prior Approval - Convert a commercial building into a home or homes";
      value: "pa.part3.classMA";
    }
  | {
      description: "Prior Approval - Convert a casino or amusement arcade into a home or homes";
      value: "pa.part3.classN";
    }
  | {
      description: "Prior Approval - Convert an agricultural building into a home";
      value: "pa.part3.classQ";
    }
  | {
      description: "Prior Approval - Convert an agricultural building to a commercial use";
      value: "pa.part3.classR";
    }
  | {
      description: "Prior Approval - Convert an agricultural building to a school";
      value: "pa.part3.classS";
    }
  | {
      description: "Prior Approval - Convert a commercial building to a school";
      value: "pa.part3.classT";
    }
  | {
      description: "Prior Approval - Changes of use permitted under a permission granted on an application";
      value: "pa.part3.classV";
    }
  | {
      description: "Prior Approval - Put up a temporary structure";
      value: "pa.part4.classBB";
    }
  | {
      description: "Prior Approval - Develop a temporary campsite";
      value: "pa.part4.classBC";
    }
  | {
      description: "Prior Approval - Put temporary school buildings on vacant commercial land";
      value: "pa.part4.classCA";
    }
  | {
      description: "Prior Approval - Use a building or land to shoot a film";
      value: "pa.part4.classE";
    }
  | {
      description: "Prior Approval - Alter or add new buildings to agricultural or forestry sites";
      value: "pa.part6";
    }
  | {
      description: "Prior Approval - Build new agricultural buildings on a unit of 5 hectares or more";
      value: "pa.part6.classA";
    }
  | {
      description: "Prior Approval - Build new agricultural buildings on a unit of less than 5 hectares";
      value: "pa.part6.classB";
    }
  | {
      description: "Prior Approval - Build new forestry buildings";
      value: "pa.part6.classE";
    }
  | {
      description: "Prior Approval - Install click and collect facilities";
      value: "pa.part7.classC";
    }
  | {
      description: "Prior Approval - Extend a school, college, university, prison or hospital";
      value: "pa.part7.classM";
    }
  | {
      description: "Prior Approval - Development of toll facilities";
      value: "pa.part9.classD";
    }
  | {
      description: "Prior Approval - Demolish a building";
      value: "pa.part11.classB";
    }
  | {
      description: "Prior Approval - Install or change solar equipment on domestic premises";
      value: "pa.part14.classA";
    }
  | {
      description: "Prior Approval - Install or change stand-alone solar equipment on domestic premises";
      value: "pa.part14.classB";
    }
  | {
      description: "Prior Approval - Install or change solar panels";
      value: "pa.part14.classJ";
    }
  | {
      description: "Prior Approval - Install or change stand-alone solar equipment on non-domestic premises";
      value: "pa.part14.classK";
    }
  | {
      description: "Prior Approval - Installation of a solar canopy on non-domestic, off-street parking";
      value: "pa.part14.classOA";
    }
  | {
      description: "Prior Approval - Install telecommunications equipment";
      value: "pa.part16.classA";
    }
  | {
      description: "Prior Approval - Coal mining";
      value: "pa.part17";
    }
  | {
      description: "Prior Approval - Other developments ancillary to mining operations";
      value: "pa.part17.classB";
    }
  | {
      description: "Prior Approval - Developments for maintenance or safety";
      value: "pa.part17.classC";
    }
  | {
      description: "Prior Approval - Coal mining development by the Coal Authority for maintenance or safety";
      value: "pa.part17.classG";
    }
  | {
      description: "Prior Approval - Development under private acts or orders";
      value: "pa.part18.classA";
    }
  | {
      description: "Prior Approval - Development on a closed defence site";
      value: "pa.part19.classTA";
    }
  | {
      description: "Prior Approval - Build homes on a detached blocks of flats";
      value: "pa.part20.classA";
    }
  | {
      description: "Prior Approval - Build homes on a detached commercial building";
      value: "pa.part20.classAA";
    }
  | {
      description: "Prior Approval - Build homes on an adjoining commercial or mixed use building";
      value: "pa.part20.classAB";
    }
  | {
      description: "Prior Approval - Build homes on adjoining houses";
      value: "pa.part20.classAC";
    }
  | {
      description: "Prior Approval - Build homes on detached houses";
      value: "pa.part20.classAD";
    }
  | {
      description: "Prior Approval - Demolish buildings and build homes in their place";
      value: "pa.part20.classZA";
    }
  | {
      description: "Planning Permission";
      value: "pp";
    }
  | {
      description: "Planning Permission for development, including all householder, minor, and major applications";
      value: "pp.full";
    }
  | {
      description: "Full Planning Permission and consent to display an advert";
      value: "pp.full.advertConsent";
    }
  | {
      description: "Full Planning Permission including demolition in a Conservation Area";
      value: "pp.full.demolition";
    }
  | {
      description: "Full Planning Permission - Fast track for the purposes of Affordable Housing";
      value: "pp.full.fastTrack.affordable";
    }
  | {
      description: "Planning Permission - Full householder";
      value: "pp.full.householder";
    }
  | {
      description: "Planning Permission - Full householder with consent to do works to a Listed Building";
      value: "pp.full.householder.listed";
    }
  | {
      description: "Planning Permission - Full householder retrospective";
      value: "pp.full.householder.retro";
    }
  | {
      description: "Planning Permission - Major application";
      value: "pp.full.major";
    }
  | {
      description: "Planning Permission - Technical details consent for major development";
      value: "pp.full.major.technicalDetails";
    }
  | {
      description: "Planning Permission - Technical details consent for waste development";
      value: "pp.full.major.technicalDetails.waste";
    }
  | {
      description: "Planning Permission - Full planning permission for waste development";
      value: "pp.full.major.waste";
    }
  | {
      description: "Planning Permission - Minor application";
      value: "pp.full.minor";
    }
  | {
      description: "Planning Permission - Minor application and consent to do works to a Listed Building";
      value: "pp.full.minor.listed";
    }
  | {
      description: "Planning Permission - Technical details consent for minor development";
      value: "pp.full.minor.technicalDetails";
    }
  | {
      description: "Planning Permission - Consent to extract minerals and related development, such as temporary buildings and roads";
      value: "pp.mineralExtraction";
    }
  | {
      description: "Planning permission - Outline for proposed development";
      value: "pp.outline";
    }
  | {
      description: "Outline Planning Permission - Consent for the principle of a project witholding all details";
      value: "pp.outline.all";
    }
  | {
      description: "Outline Planning Permission - Consent for the principle of a project specifying some details";
      value: "pp.outline.some";
    }
  | {
      description: "Planning permission - Outline for proposed development (minor)";
      value: "pp.outline.minor";
    }
  | {
      description: "Outline Planning Permission - Consent for the principle of a project witholding all details (minor)";
      value: "pp.outline.minor.all";
    }
  | {
      description: "Outline Planning Permission - Consent for the principle of a project specifying some details (minor)";
      value: "pp.outline.minor.some";
    }
  | {
      description: "Planning permission - Outline for proposed development (major)";
      value: "pp.outline.major";
    }
  | {
      description: "Outline Planning Permission - Consent for the principle of a project witholding all details (major)";
      value: "pp.outline.major.all";
    }
  | {
      description: "Outline Planning Permission - Consent for the principle of waste development witholding all details";
      value: "pp.outline.major.all.waste";
    }
  | {
      description: "Outline Planning Permission - Consent for the principle of a project specifying some details (major)";
      value: "pp.outline.major.some";
    }
  | {
      description: "Outline Planning Permission - Consent for the principle of waste development witholding some details";
      value: "pp.outline.major.some.waste";
    }
  | {
      description: "Planning Permission in Principle - Consent for the principle of a project with less than 1,000 square metres floor area on a site of less than 1 hectare";
      value: "pp.pip";
    }
  | {
      description: "Rights of Way Order - Apply to move or close a path";
      value: "rightsOfWayOrder";
    }
  | {
      description: "Works to trees";
      value: "wtt";
    }
  | {
      description: "Works to trees - Consent to carry out works to a tree with a Tree Preservation Order";
      value: "wtt.consent";
    }
  | {
      description: "Works to trees - Notification of proposed works to a tree in a Conservation Area";
      value: "wtt.notice";
    };
/**
 * Union of GeoJSON objects.
 */
export type GeoJSON = Geometry | Feature | FeatureCollection;
/**
 * Geometry object. https://tools.ietf.org/html/rfc7946#section-3
 */
export type Geometry =
  | Point
  | MultiPoint
  | LineString
  | MultiLineString
  | Polygon
  | MultiPolygon
  | GeometryCollection;
/**
 * A Position is an array of coordinates. https://tools.ietf.org/html/rfc7946#section-3.1.1 Array should contain between two and three elements. The previous GeoJSON specification allowed more elements (e.g., which could be used to represent M values), but the current specification only allows X, Y, and (optionally) Z to be defined.
 */
export type Position = number[];
/**
 * Information about the site where the works will happen
 */
export type Property = UKProperty | LondonProperty;
/**
 * Combined `PAO_START_NUMBER`, `PAO_START_SUFFIX`, `PAO_TEXT` OS LPI properties
 */
export type PrimaryAddressableObjectStartRangeAndOrBuildingDescription = string;
/**
 * Combined `PAO_END_NUMBER`, `PAO_END_SUFFIX` OS LPI properties
 */
export type PrimaryAddressableObjectPAOEndRange = string;
/**
 * Combined `SAO_START_NUMBER`, `SAO_START_SUFFIX`, `SAO_TEXT` OS LPI properties
 */
export type SecondaryAddressableObjectSAOStartRangeAndOrBuildingDescription =
  string;
/**
 * Combined `SAO_END_NUMBER`, `SAO_END_SUFFIX` OS LPI properties
 */
export type SecondaryAddressableObjectSAOEndRange = string;
export type UniquePropertyReferenceNumber = string;
export type UniqueStreetReferenceNumber = string;
/**
 * Planning constraints that intersect with the proposed site
 */
export type PlanningConstraint =
  | {
      description: string;
      intersects: false;
      value: string;
    }
  | {
      description: string;
      entities: Entity[];
      intersects: true;
      value: string;
    };
export type URL = string;
/**
 * Planning designations that may intersect with the proposed site determined by spatial queries against Planning Data (planning.data.gov.uk) and Ordnance Survey
 */
export type PlanningDesignation =
  | (
      | {
          description: "Article 4 Direction area";
          intersects: false;
          value: "article4";
        }
      | {
          description: "Central Activities Zone (CAZ)";
          intersects: false;
          value: "article4.caz";
        }
      | {
          description: "Brownfield site";
          intersects: false;
          value: "brownfieldSite";
        }
      | {
          description: "Designated land";
          intersects: false;
          value: "designated";
        }
      | {
          description: "Area of Outstanding Natural Beauty (AONB)";
          intersects: false;
          value: "designated.AONB";
        }
      | {
          description: "Conservation Area";
          intersects: false;
          value: "designated.conservationArea";
        }
      | {
          description: "National Park";
          intersects: false;
          value: "designated.nationalPark";
        }
      | {
          description: "National Park - Broads";
          intersects: false;
          value: "designated.nationalPark.broads";
        }
      | {
          description: "UNESCO World Heritage Site or buffer zone";
          intersects: false;
          value: "designated.WHS";
        }
      | {
          description: "Flood Risk Zone";
          intersects: false;
          value: "flood";
        }
      | {
          description: "Flood Risk Zone 1 - Low risk";
          intersects: false;
          value: "flood.zone.1";
        }
      | {
          description: "Flood Risk Zone 2 - Medium risk";
          intersects: false;
          value: "flood.zone.2";
        }
      | {
          description: "Flood Risk Zone 3 - High risk";
          intersects: false;
          value: "flood.zone.3";
        }
      | {
          description: "Green Belt";
          intersects: false;
          value: "greenBelt";
        }
      | {
          description: "Listed Building";
          intersects: false;
          value: "listed";
        }
      | {
          description: "Listed Building - Grade I";
          intersects: false;
          value: "listed.grade.I";
        }
      | {
          description: "Listed Building - Grade II";
          intersects: false;
          value: "listed.grade.II";
        }
      | {
          description: "Listed Building - Grade II*";
          intersects: false;
          value: "listed.grade.II*";
        }
      | {
          description: "Locally Listed Building";
          intersects: false;
          value: "locallyListed";
        }
      | {
          description: "Site of a Scheduled Monument";
          intersects: false;
          value: "monument";
        }
      | {
          description: "Ancient Semi-Natural Woodland (ASNW)";
          intersects: false;
          value: "nature.ASNW";
        }
      | {
          description: "Ramsar site";
          intersects: false;
          value: "nature.ramsarSite";
        }
      | {
          description: "Special Area of Conservation (SAC)";
          intersects: false;
          value: "nature.SAC";
        }
      | {
          description: "Special Protection Area (SPA)";
          intersects: false;
          value: "nature.SPA";
        }
      | {
          description: "Site of Special Scientific Interest (SSSI)";
          intersects: false;
          value: "nature.SSSI";
        }
      | {
          description: "Historic Park or Garden";
          intersects: false;
          value: "registeredPark";
        }
      | {
          description: "Classified Road";
          intersects: false;
          value: "road.classified";
        }
      | {
          description: "Tree Preservation Order (TPO) or zone";
          intersects: false;
          value: "tpo";
        }
    )
  | (
      | {
          description: "Article 4 Direction area";
          entities?: Entity[];
          intersects: true;
          value: "article4";
        }
      | {
          description: "Central Activities Zone (CAZ)";
          entities?: Entity[];
          intersects: true;
          value: "article4.caz";
        }
      | {
          description: "Brownfield site";
          entities?: Entity[];
          intersects: true;
          value: "brownfieldSite";
        }
      | {
          description: "Designated land";
          entities?: Entity[];
          intersects: true;
          value: "designated";
        }
      | {
          description: "Area of Outstanding Natural Beauty (AONB)";
          entities?: Entity[];
          intersects: true;
          value: "designated.AONB";
        }
      | {
          description: "Conservation Area";
          entities?: Entity[];
          intersects: true;
          value: "designated.conservationArea";
        }
      | {
          description: "National Park";
          entities?: Entity[];
          intersects: true;
          value: "designated.nationalPark";
        }
      | {
          description: "National Park - Broads";
          entities?: Entity[];
          intersects: true;
          value: "designated.nationalPark.broads";
        }
      | {
          description: "UNESCO World Heritage Site or buffer zone";
          entities?: Entity[];
          intersects: true;
          value: "designated.WHS";
        }
      | {
          description: "Flood Risk Zone";
          entities?: Entity[];
          intersects: true;
          value: "flood";
        }
      | {
          description: "Flood Risk Zone 1 - Low risk";
          entities?: Entity[];
          intersects: true;
          value: "flood.zone.1";
        }
      | {
          description: "Flood Risk Zone 2 - Medium risk";
          entities?: Entity[];
          intersects: true;
          value: "flood.zone.2";
        }
      | {
          description: "Flood Risk Zone 3 - High risk";
          entities?: Entity[];
          intersects: true;
          value: "flood.zone.3";
        }
      | {
          description: "Green Belt";
          entities?: Entity[];
          intersects: true;
          value: "greenBelt";
        }
      | {
          description: "Listed Building";
          entities?: Entity[];
          intersects: true;
          value: "listed";
        }
      | {
          description: "Listed Building - Grade I";
          entities?: Entity[];
          intersects: true;
          value: "listed.grade.I";
        }
      | {
          description: "Listed Building - Grade II";
          entities?: Entity[];
          intersects: true;
          value: "listed.grade.II";
        }
      | {
          description: "Listed Building - Grade II*";
          entities?: Entity[];
          intersects: true;
          value: "listed.grade.II*";
        }
      | {
          description: "Locally Listed Building";
          entities?: Entity[];
          intersects: true;
          value: "locallyListed";
        }
      | {
          description: "Site of a Scheduled Monument";
          entities?: Entity[];
          intersects: true;
          value: "monument";
        }
      | {
          description: "Ancient Semi-Natural Woodland (ASNW)";
          entities?: Entity[];
          intersects: true;
          value: "nature.ASNW";
        }
      | {
          description: "Ramsar site";
          entities?: Entity[];
          intersects: true;
          value: "nature.ramsarSite";
        }
      | {
          description: "Special Area of Conservation (SAC)";
          entities?: Entity[];
          intersects: true;
          value: "nature.SAC";
        }
      | {
          description: "Special Protection Area (SPA)";
          entities?: Entity[];
          intersects: true;
          value: "nature.SPA";
        }
      | {
          description: "Site of Special Scientific Interest (SSSI)";
          entities?: Entity[];
          intersects: true;
          value: "nature.SSSI";
        }
      | {
          description: "Historic Park or Garden";
          entities?: Entity[];
          intersects: true;
          value: "registeredPark";
        }
      | {
          description: "Classified Road";
          entities?: Entity[];
          intersects: true;
          value: "road.classified";
        }
      | {
          description: "Tree Preservation Order (TPO) or zone";
          entities?: Entity[];
          intersects: true;
          value: "tpo";
        }
    );
/**
 * The UK region that contains this address sourced from planning.data.gov.uk/dataset/region, where London is a proxy for the Greater London Authority (GLA) area
 */
export type UKRegion =
  | "North East"
  | "North West"
  | "Yorkshire and The Humber"
  | "East Midlands"
  | "West Midlands"
  | "East of England"
  | "London"
  | "South East"
  | "South West";
/**
 * Property types derived from Basic Land and Property Unit (BLPU) classification codes
 */
export type PropertyType =
  | {
      description: "Commercial";
      value: "commercial";
    }
  | {
      description: "Agricultural";
      value: "commercial.agriculture";
    }
  | {
      description: "Farm / Non-Residential Associated Building";
      value: "commercial.agriculture.farm";
    }
  | {
      description: "Fishery";
      value: "commercial.fish";
    }
  | {
      description: "Fish Farming";
      value: "commercial.fish.farm";
    }
  | {
      description: "Fish Hatchery";
      value: "commercial.fish.hatchery";
    }
  | {
      description: "Fish Processing";
      value: "commercial.fish.processing";
    }
  | {
      description: "Oyster / Mussel Bed";
      value: "commercial.fish.oysters";
    }
  | {
      description: "Horticulture";
      value: "commercial.horticulture";
    }
  | {
      description: "Smallholding";
      value: "commercial.horticulture.smallholding";
    }
  | {
      description: "Vineyard";
      value: "commercial.horticulture.vineyard";
    }
  | {
      description: "Watercress Bed";
      value: "commercial.horticulture.watercress";
    }
  | {
      description: "Slaughter House / Abattoir";
      value: "commercial.abattoir";
    }
  | {
      description: "Ancillary Building";
      value: "commercial.ancilliary";
    }
  | {
      description: "Community Services";
      value: "commercial.community";
    }
  | {
      description: "Law Court";
      value: "commercial.community.court";
    }
  | {
      description: "Prison";
      value: "commercial.community.prison";
    }
  | {
      description: "HM Detention Centre";
      value: "commercial.community.prison.detention";
    }
  | {
      description: "HM Prison Service";
      value: "commercial.community.prison.service";
    }
  | {
      description: "Secure Residential Accommodation";
      value: "commercial.community.prison.secureResidential";
    }
  | {
      description: "Public / Village Hall / Other Community Facility";
      value: "commercial.community.hall";
    }
  | {
      description: "Youth Recreational / Social Club";
      value: "commercial.community.hall.club";
    }
  | {
      description: "Public Convenience";
      value: "commercial.community.wc";
    }
  | {
      description: "Cemetery / Crematorium / Graveyard. In Current Use.";
      value: "commercial.community.cemetary";
    }
  | {
      description: "Columbarium";
      value: "commercial.community.cemetary.columbarium";
    }
  | {
      description: "Crematorium";
      value: "commercial.community.cemetary.crematorium";
    }
  | {
      description: "Chapel Of Rest";
      value: "commercial.community.cemetary.chapelOfRest";
    }
  | {
      description: "Cemetery";
      value: "commercial.community.cemetary.cemetary";
    }
  | {
      description: "Military Cemetery";
      value: "commercial.community.cemetary.military";
    }
  | {
      description: "Mortuary";
      value: "commercial.community.cemetary.mortuary";
    }
  | {
      description: "Church Hall / Religious Meeting Place / Hall";
      value: "commercial.community.religious";
    }
  | {
      description: "Community Service Centre / Office";
      value: "commercial.community.services";
    }
  | {
      description: "Public Household Waste Recycling Centre (HWRC)";
      value: "commercial.community.HWRC";
    }
  | {
      description: "Recycling Site";
      value: "commercial.community.recycling";
    }
  | {
      description: "CCTV";
      value: "commercial.community.CCTV";
    }
  | {
      description: "Job Centre";
      value: "commercial.community.employment";
    }
  | {
      description: "Education";
      value: "commercial.education";
    }
  | {
      description: "College";
      value: "commercial.education.college";
    }
  | {
      description: "Further Education";
      value: "commercial.education.college.further";
    }
  | {
      description: "Higher Education";
      value: "commercial.education.college.higher";
    }
  | {
      description: "Children's Nursery / Crèche";
      value: "commercial.education.nursery";
    }
  | {
      description: "Preparatory / First / Primary / Infant / Junior / Middle School";
      value: "commercial.education.school";
    }
  | {
      description: "First School";
      value: "commercial.education.school.first";
    }
  | {
      description: "Infant School";
      value: "commercial.education.school.infant";
    }
  | {
      description: "Junior School";
      value: "commercial.education.school.junior";
    }
  | {
      description: "Middle School";
      value: "commercial.education.school.middle";
    }
  | {
      description: "Non State Primary / Preparatory School";
      value: "commercial.education.school.primary.private";
    }
  | {
      description: "Primary School";
      value: "commercial.education.school.primary.state";
    }
  | {
      description: "Secondary / High School";
      value: "commercial.education.secondarySchool";
    }
  | {
      description: "Non State Secondary School";
      value: "commercial.education.secondarySchool.private";
    }
  | {
      description: "Secondary School";
      value: "commercial.education.secondarySchool.state";
    }
  | {
      description: "University";
      value: "commercial.education.university";
    }
  | {
      description: "Special Needs Establishment.";
      value: "commercial.education.specialNeeds";
    }
  | {
      description: "Other Educational Establishment";
      value: "commercial.education.other";
    }
  | {
      description: "Hotel / Motel / Boarding / Guest House";
      value: "commercial.guest";
    }
  | {
      description: "Boarding / Guest House / Bed And Breakfast / Youth Hostel";
      value: "commercial.guest.hostel";
    }
  | {
      description: "Youth Hostel";
      value: "commercial.guest.hostel.youth";
    }
  | {
      description: "Holiday Let/Accomodation/Short-Term Let Other Than CH01";
      value: "commercial.guest.shortLet";
    }
  | {
      description: "Hotel/Motel";
      value: "commercial.guest.hotel";
    }
  | {
      description: "Industrial Applicable to manufacturing, engineering, maintenance, storage / wholesale distribution and extraction sites";
      value: "commercial.industrial";
    }
  | {
      description: "Factory/Manufacturing";
      value: "commercial.industrial.manufacturing";
    }
  | {
      description: "Aircraft Works";
      value: "commercial.industrial.manufacturing.aircraft";
    }
  | {
      description: "Boat Building";
      value: "commercial.industrial.manufacturing.boats";
    }
  | {
      description: "Brick Works";
      value: "commercial.industrial.manufacturing.bricks";
    }
  | {
      description: "Brewery";
      value: "commercial.industrial.manufacturing.beer";
    }
  | {
      description: "Cider Manufacture";
      value: "commercial.industrial.manufacturing.cider";
    }
  | {
      description: "Chemical Works";
      value: "commercial.industrial.manufacturing.chemicals";
    }
  | {
      description: "Cement Works";
      value: "commercial.industrial.manufacturing.cement";
    }
  | {
      description: "Dairy Processing";
      value: "commercial.industrial.manufacturing.dairy";
    }
  | {
      description: "Distillery";
      value: "commercial.industrial.manufacturing.distillery";
    }
  | {
      description: "Flour Mill";
      value: "commercial.industrial.manufacturing.flour";
    }
  | {
      description: "Food Processing";
      value: "commercial.industrial.manufacturing.food";
    }
  | {
      description: "Glassworks";
      value: "commercial.industrial.manufacturing.glass";
    }
  | {
      description: "Manufacturing";
      value: "commercial.industrial.manufacturing.other";
    }
  | {
      description: "Oast House";
      value: "commercial.industrial.manufacturing.hops";
    }
  | {
      description: "Oil Refining";
      value: "commercial.industrial.manufacturing.oil";
    }
  | {
      description: "Pottery Manufacturing";
      value: "commercial.industrial.manufacturing.pottery";
    }
  | {
      description: "Paper Mill";
      value: "commercial.industrial.manufacturing.paper";
    }
  | {
      description: "Printing Works";
      value: "commercial.industrial.manufacturing.printing";
    }
  | {
      description: "Sugar Refinery";
      value: "commercial.industrial.manufacturing.sugar";
    }
  | {
      description: "Steel Works";
      value: "commercial.industrial.manufacturing.steel";
    }
  | {
      description: "Timber Mill";
      value: "commercial.industrial.manufacturing.timber";
    }
  | {
      description: "Winery";
      value: "commercial.industrial.manufacturing.wine";
    }
  | {
      description: "Shipyard";
      value: "commercial.industrial.manufacturing.ships";
    }
  | {
      description: "Mineral / Ore Working / Quarry / Mine";
      value: "commercial.industrial.extraction";
    }
  | {
      description: "Mineral Mining / Active";
      value: "commercial.industrial.extraction.mining";
    }
  | {
      description: "Mineral Distribution / Storage";
      value: "commercial.industrial.extraction.distribution";
    }
  | {
      description: "Mineral Processing";
      value: "commercial.industrial.extraction.processing";
    }
  | {
      description: "Oil / Gas Extraction / Active";
      value: "commercial.industrial.extraction.oilGas";
    }
  | {
      description: "Mineral Quarrying / Open Extraction / Active";
      value: "commercial.industrial.extraction.quarrying";
    }
  | {
      description: "Workshop / Light Industrial";
      value: "commercial.industrial.light";
    }
  | {
      description: "Servicing Garage";
      value: "commercial.industrial.light.garage";
    }
  | {
      description: "Warehouse / Store / Storage Depot";
      value: "commercial.industrial.light.storage";
    }
  | {
      description: "Crop Handling / Storage";
      value: "commercial.industrial.light.storage.crops";
    }
  | {
      description: "Postal Sorting / Distribution";
      value: "commercial.industrial.light.storage.post";
    }
  | {
      description: "Solid Fuel Storage";
      value: "commercial.industrial.light.storage.solidFuel";
    }
  | {
      description: "Timber Storage";
      value: "commercial.industrial.light.storage.timber";
    }
  | {
      description: "Wholesale Distribution";
      value: "commercial.industrial.distribution";
    }
  | {
      description: "Solid Fuel Distribution";
      value: "commercial.industrial.distribution.solidFueld";
    }
  | {
      description: "Timber Distribution";
      value: "commercial.industrial.distribution.timber";
    }
  | {
      description: "Recycling Plant";
      value: "commercial.industrial.recycling";
    }
  | {
      description: "Incinerator / Waste Transfer Station";
      value: "commercial.industrial.incineration";
    }
  | {
      description: "Maintenance Depot";
      value: "commercial.industrial.maintenanceDepot";
    }
  | {
      description: "Leisure - Applicable to recreational sites and enterprises";
      value: "commercial.leisure";
    }
  | {
      description: "Amusements";
      value: "commercial.leisure.amusements";
    }
  | {
      description: "Leisure Pier";
      value: "commercial.leisure.amusements.pier";
    }
  | {
      description: "Holiday / Campsite";
      value: "commercial.leisure.holiday";
    }
  | {
      description: "Camping";
      value: "commercial.leisure.holiday.camping";
    }
  | {
      description: "Caravanning";
      value: "commercial.leisure.holiday.caravanning";
    }
  | {
      description: "Holiday Accommodation";
      value: "commercial.leisure.holiday.accommodation";
    }
  | {
      description: "Holiday Centre";
      value: "commercial.leisure.holiday.centre";
    }
  | {
      description: "Youth Organisation Camp";
      value: "commercial.leisure.holiday.youth";
    }
  | {
      description: "Library";
      value: "commercial.leisure.library";
    }
  | {
      description: "Reading Room";
      value: "commercial.leisure.library.readingRoom";
    }
  | {
      description: "Museum / Gallery";
      value: "commercial.leisure.museum";
    }
  | {
      description: "Art Centre / Gallery";
      value: "commercial.leisure.museum.art";
    }
  | {
      description: "Aviation Museum";
      value: "commercial.leisure.museum.aviation";
    }
  | {
      description: "Heritage Centre";
      value: "commercial.leisure.museum.heritage";
    }
  | {
      description: "Industrial Museum";
      value: "commercial.leisure.museum.industrial";
    }
  | {
      description: "Military Museum";
      value: "commercial.leisure.museum.military";
    }
  | {
      description: "Maritime Museum";
      value: "commercial.leisure.museum.maritime";
    }
  | {
      description: "Science Museum";
      value: "commercial.leisure.museum.science";
    }
  | {
      description: "Transport Museum";
      value: "commercial.leisure.museum.transport";
    }
  | {
      description: "Indoor / Outdoor Leisure / Sporting Activity / Centre";
      value: "commercial.leisure.sport";
    }
  | {
      description: "Athletics Facility";
      value: "commercial.leisure.sport.athletics";
    }
  | {
      description: "Bowls Facility";
      value: "commercial.leisure.sport.bowls";
    }
  | {
      description: "Cricket Facility";
      value: "commercial.leisure.sport.cricket";
    }
  | {
      description: "Curling Facility";
      value: "commercial.leisure.sport.curling";
    }
  | {
      description: "Diving / Swimming Facility";
      value: "commercial.leisure.sport.swimming";
    }
  | {
      description: "Equestrian Sports Facility";
      value: "commercial.leisure.sport.equestrian";
    }
  | {
      description: "Football Facility";
      value: "commercial.leisure.sport.football";
    }
  | {
      description: "Fishing / Angling Facility";
      value: "commercial.leisure.sport.fishing";
    }
  | {
      description: "Golf Facility";
      value: "commercial.leisure.sport.golf";
    }
  | {
      description: "Gliding Facility";
      value: "commercial.leisure.sport.gliding";
    }
  | {
      description: "Greyhound Racing Facility";
      value: "commercial.leisure.sport.dogracing";
    }
  | {
      description: "Hockey Facility";
      value: "commercial.leisure.sport.hockey";
    }
  | {
      description: "Horse Racing Facility";
      value: "commercial.leisure.sport.horseracing";
    }
  | {
      description: "Historic Vessel / Aircraft / Vehicle";
      value: "commercial.leisure.sport.historicVehicles";
    }
  | {
      description: "Activity / Leisure / Sports Centre";
      value: "commercial.leisure.sport.centre";
    }
  | {
      description: "Model Sports Facility";
      value: "commercial.leisure.sport.model";
    }
  | {
      description: "Motor Sports Facility";
      value: "commercial.leisure.sport.motor";
    }
  | {
      description: "Playing Field";
      value: "commercial.leisure.sport.playingField";
    }
  | {
      description: "Racquet Sports Facility";
      value: "commercial.leisure.sport.racquet";
    }
  | {
      description: "Rugby Facility";
      value: "commercial.leisure.sport.rugby";
    }
  | {
      description: "Recreation Ground";
      value: "commercial.leisure.sport.recreationGround";
    }
  | {
      description: "Shinty Facility";
      value: "commercial.leisure.sport.shinty";
    }
  | {
      description: "Skateboarding Facility";
      value: "commercial.leisure.sport.skateboarding";
    }
  | {
      description: "Civilian Firing Facility";
      value: "commercial.leisure.sport.firing";
    }
  | {
      description: "Tenpin Bowling Facility";
      value: "commercial.leisure.sport.tenpin";
    }
  | {
      description: "Public Tennis Court";
      value: "commercial.leisure.sport.tennis";
    }
  | {
      description: "Water Sports Facility";
      value: "commercial.leisure.sport.water";
    }
  | {
      description: "Winter Sports Facility";
      value: "commercial.leisure.sport.winter";
    }
  | {
      description: "Wildlife Sports Facility";
      value: "commercial.leisure.sport.wildlife";
    }
  | {
      description: "Cycling Sports Facility";
      value: "commercial.leisure.sport.cycling";
    }
  | {
      description: "Bingo Hall / Cinema / Conference / Exhibition Centre / Theatre / Concert Hall";
      value: "commercial.leisure.entertainment";
    }
  | {
      description: "Cinema";
      value: "commercial.leisure.entertainment.cinema";
    }
  | {
      description: "Entertainment Complex";
      value: "commercial.leisure.entertainment.mixed";
    }
  | {
      description: "Conference / Exhibition Centre";
      value: "commercial.leisure.entertainment.exhibition";
    }
  | {
      description: "Theatre";
      value: "commercial.leisure.entertainment.theatre";
    }
  | {
      description: "Zoo / Theme Park";
      value: "commercial.leisure.park.zoo";
    }
  | {
      description: "Amusement Park";
      value: "commercial.leisure.park.amusement";
    }
  | {
      description: "Aquatic Attraction";
      value: "commercial.leisure.park.aquatic";
    }
  | {
      description: "Model Village Site";
      value: "commercial.leisure.park.model";
    }
  | {
      description: "Wildlife / Zoological Park";
      value: "commercial.leisure.park.wildlife";
    }
  | {
      description: "Beach Hut (Recreational, Non-Residential Use Only)";
      value: "commercial.leisure.beachHut";
    }
  | {
      description: "Licensed Private Members' Club";
      value: "commercial.leisure.club.private";
    }
  | {
      description: "Recreational / Social Club";
      value: "commercial.leisure.club.social";
    }
  | {
      description: "Arena / Stadium";
      value: "commercial.leisure.arena";
    }
  | {
      description: "Stadium";
      value: "commercial.leisure.arena.stadium";
    }
  | {
      description: "Showground";
      value: "commercial.leisure.arena.showground";
    }
  | {
      description: "Medical";
      value: "commercial.medical";
    }
  | {
      description: "Dentist";
      value: "commercial.medical.dentist";
    }
  | {
      description: "General Practice Surgery / Clinic";
      value: "commercial.medical.GP";
    }
  | {
      description: "Health Centre";
      value: "commercial.medical.healthCentre";
    }
  | {
      description: "Health Care Services";
      value: "commercial.medical.healthServices";
    }
  | {
      description: "Hospital / Hospice";
      value: "commercial.medical.care";
    }
  | {
      description: "Care home/Hospice";
      value: "commercial.medical.care.home";
    }
  | {
      description: "Hospital";
      value: "commercial.medical.care.hospital";
    }
  | {
      description: "Medical / Testing / Research Laboratory";
      value: "commercial.medical.lab";
    }
  | {
      description: "Professional Medical Service";
      value: "commercial.medical.professional";
    }
  | {
      description: "Assessment / Development Services";
      value: "commercial.medical.assessment";
    }
  | {
      description: "Animal Centre";
      value: "commercial.animals";
    }
  | {
      description: "Cattery / Kennel";
      value: "commercial.animals.kennelsCattery";
    }
  | {
      description: "Animal Services";
      value: "commercial.animals.services";
    }
  | {
      description: "Animal Quarantining";
      value: "commercial.animals.services.quarantine";
    }
  | {
      description: "Equestrian";
      value: "commercial.animals.equestrian";
    }
  | {
      description: "Horse Racing / Breeding Stable";
      value: "commercial.animals.equestrian.racing";
    }
  | {
      description: "Commercial Stabling / Riding";
      value: "commercial.animals.equestrian.riding";
    }
  | {
      description: "Vet / Animal Medical Treatment";
      value: "commercial.animals.vet";
    }
  | {
      description: "Animal / Bird / Marine Sanctuary";
      value: "commercial.animals.sanctuary";
    }
  | {
      description: "Animal Sanctuary";
      value: "commercial.animals.sanctuary.animals";
    }
  | {
      description: "Marine Sanctuary";
      value: "commercial.animals.sanctuary.marine";
    }
  | {
      description: "Office";
      value: "commercial.office";
    }
  | {
      description: "Office / Work Studio";
      value: "commercial.office.workspace";
    }
  | {
      description: "Embassy /, High Commission / Consulate";
      value: "commercial.office.workspace.embassy";
    }
  | {
      description: "Film Studio";
      value: "commercial.office.workspace.film";
    }
  | {
      description: "Central Government Service";
      value: "commercial.office.workspace.gov.national";
    }
  | {
      description: "Local Government Service";
      value: "commercial.office.workspace.gov.local";
    }
  | {
      description: "Broadcasting (TV / Radio)";
      value: "commercial.office.broadcasting";
    }
  | {
      description: "Retail";
      value: "commercial.retail";
    }
  | {
      description: "Bank / Financial Service";
      value: "commercial.retail.financial";
    }
  | {
      description: "Retail Service Agent";
      value: "commercial.retail.services";
    }
  | {
      description: "Post Office";
      value: "commercial.retail.post";
    }
  | {
      description: "Market (Indoor / Outdoor)";
      value: "commercial.retail.market";
    }
  | {
      description: "Fish Market";
      value: "commercial.retail.market.fish";
    }
  | {
      description: "Fruit / Vegetable Market";
      value: "commercial.retail.market.fruit";
    }
  | {
      description: "Livestock Market";
      value: "commercial.retail.market.livestock";
    }
  | {
      description: "Petrol Filling Station";
      value: "commercial.retail.fuel";
    }
  | {
      description: "Public House / Bar / Nightclub";
      value: "commercial.retail.drinking";
    }
  | {
      description: "Restaurant / Cafeteria";
      value: "commercial.retail.restaurant";
    }
  | {
      description: "Shop / Showroom";
      value: "commercial.retail.showroom";
    }
  | {
      description: "Shop";
      value: "commercial.retail.shop";
    }
  | {
      description: "Garden Centre";
      value: "commercial.retail.shop.gardenCentre";
    }
  | {
      description: "Other Licensed Premise / Vendor";
      value: "commercial.retail.licensedPremises";
    }
  | {
      description: "Fast Food Outlet / Takeaway (Hot / Cold)";
      value: "commercial.retail.takeaway";
    }
  | {
      description: "Automated Teller Machine (ATM)";
      value: "commercial.retail.atm";
    }
  | {
      description: "Storage Land";
      value: "commercial.storageLand";
    }
  | {
      description: "General Storage Land";
      value: "commercial.storageLand.general";
    }
  | {
      description: "Builders' Yard";
      value: "commercial.storageLand.building";
    }
  | {
      description: "Transport";
      value: "commercial.transport";
    }
  | {
      description: "Airfield / Airstrip / Airport / Air Transport Infrastructure Facility";
      value: "commercial.transport.air";
    }
  | {
      description: "Airfield";
      value: "commercial.transport.air.airfield";
    }
  | {
      description: "Air Transport Infrastructure Services";
      value: "commercial.transport.air.infrastructure";
    }
  | {
      description: "Airport";
      value: "commercial.transport.air.airport";
    }
  | {
      description: "Air Passenger Terminal";
      value: "commercial.transport.air.passengerTerminal";
    }
  | {
      description: "Helicopter Station";
      value: "commercial.transport.air.helicopterStation";
    }
  | {
      description: "Heliport / Helipad";
      value: "commercial.transport.air.heliport";
    }
  | {
      description: "Bus Shelter";
      value: "commercial.transport.bus";
    }
  | {
      description: "Car / Coach / Commercial Vehicle / Taxi Parking / Park And Ride Site";
      value: "commercial.transport.parking";
    }
  | {
      description: "Public Park And Ride";
      value: "commercial.transport.parking.parkAndRide";
    }
  | {
      description: "Public Car Parking";
      value: "commercial.transport.parking.car";
    }
  | {
      description: "Public Coach Parking";
      value: "commercial.transport.parking.coach";
    }
  | {
      description: "Public Commercial Vehicle Parking";
      value: "commercial.transport.parking.commercialVehicle";
    }
  | {
      description: "Goods Freight Handling / Terminal";
      value: "commercial.transport.freight";
    }
  | {
      description: "Air Freight Terminal";
      value: "commercial.transport.freight.air";
    }
  | {
      description: "Container Freight";
      value: "commercial.transport.freight.container";
    }
  | {
      description: "Road Freight Transport";
      value: "commercial.transport.freight.road";
    }
  | {
      description: "Rail Freight Transport";
      value: "commercial.transport.freight.rail";
    }
  | {
      description: "Marina";
      value: "commercial.transport.marina";
    }
  | {
      description: "Mooring";
      value: "commercial.transport.mooring";
    }
  | {
      description: "Railway Asset";
      value: "commercial.transport.railAsset";
    }
  | {
      description: "Station / Interchange / Terminal / Halt";
      value: "commercial.transport.terminal";
    }
  | {
      description: "Bus station";
      value: "commercial.transport.terminal.bus";
    }
  | {
      description: "Train station";
      value: "commercial.transport.terminal.train";
    }
  | {
      description: "Vehicular Rail Terminal";
      value: "commercial.transport.terminal.vehicularRail";
    }
  | {
      description: "Transport Track / Way";
      value: "commercial.transport.track";
    }
  | {
      description: "Cliff Railway";
      value: "commercial.transport.track.cliff";
    }
  | {
      description: "Chair Lift / Cable Car / Ski Tow";
      value: "commercial.transport.track.cable";
    }
  | {
      description: "Monorail";
      value: "commercial.transport.track.monorail";
    }
  | {
      description: "Vehicle Storage";
      value: "commercial.transport.storage";
    }
  | {
      description: "Boat Storage";
      value: "commercial.transport.storage.boat";
    }
  | {
      description: "Bus / Coach Depot";
      value: "commercial.transport.storage.bus";
    }
  | {
      description: "Transport Related Infrastructure";
      value: "commercial.transport.infrastructure";
    }
  | {
      description: "Aqueduct";
      value: "commercial.transport.infrastructure.aqueduct";
    }
  | {
      description: "Lock";
      value: "commercial.transport.infrastructure.lock";
    }
  | {
      description: "Weir";
      value: "commercial.transport.infrastructure.weir";
    }
  | {
      description: "Weighbridge / Load Gauge";
      value: "commercial.transport.infrastructure.weighing";
    }
  | {
      description: "Overnight Lorry Park";
      value: "commercial.transport.overnightLorryPark";
    }
  | {
      description: "Harbour / Port / Dock / Dockyard / Slipway / Landing Stage / Pier / Jetty / Pontoon / Terminal / Berthing / Quay";
      value: "commercial.transport.dock";
    }
  | {
      description: "Passenger Ferry Terminal";
      value: "commercial.transport.dock.ferry.passengers";
    }
  | {
      description: "Non-Tanker Nautical Berthing";
      value: "commercial.transport.dock.generalBerth";
    }
  | {
      description: "Nautical Refuelling Facility";
      value: "commercial.transport.dock.refuelling";
    }
  | {
      description: "Slipway";
      value: "commercial.transport.dock.slipway";
    }
  | {
      description: "Ship Passenger Terminal";
      value: "commercial.transport.dock.passenger";
    }
  | {
      description: "Tanker Berthing";
      value: "commercial.transport.dock.tankerBerth";
    }
  | {
      description: "Vehicular Ferry Terminal";
      value: "commercial.transport.dock.ferry.vehicles";
    }
  | {
      description: "Utility";
      value: "commercial.utility";
    }
  | {
      description: "Electricity Sub-Station";
      value: "commercial.utility.SubStation";
    }
  | {
      description: "Landfill";
      value: "commercial.utility.landfill";
    }
  | {
      description: "Power Station / Energy Production";
      value: "commercial.utility.electricity";
    }
  | {
      description: "Electricity Distribution Facility";
      value: "commercial.utility.electricity.distribution";
    }
  | {
      description: "Electricity Production Facility";
      value: "commercial.utility.electricity.production";
    }
  | {
      description: "Wind Farm";
      value: "commercial.utility.electricity.windFarm";
    }
  | {
      description: "Wind Turbine";
      value: "commercial.utility.electricity.windTurbine";
    }
  | {
      description: "Pump House / Pumping Station / Water Tower";
      value: "commercial.utility.water";
    }
  | {
      description: "Water Controlling / Pumping";
      value: "commercial.utility.water.pump.control";
    }
  | {
      description: "Water Distribution / Pumping";
      value: "commercial.utility.water.pump.distribution";
    }
  | {
      description: "Water Quality Monitoring";
      value: "commercial.utility.water.qualityMonitoring";
    }
  | {
      description: "Water Storage";
      value: "commercial.utility.water.storage";
    }
  | {
      description: "Waste Water Distribution / Pumping";
      value: "commercial.utility.water.waste";
    }
  | {
      description: "Telecommunication";
      value: "commercial.utility.telecoms";
    }
  | {
      description: "Telecommunications Mast";
      value: "commercial.utility.telecoms.mast";
    }
  | {
      description: "Telephone Exchange";
      value: "commercial.utility.telecoms.exhange";
    }
  | {
      description: "Water / Waste Water / Sewage Treatment Works";
      value: "commercial.utility.waterTreatment";
    }
  | {
      description: "Waste Water Treatment";
      value: "commercial.utility.waterTreatment.waste";
    }
  | {
      description: "Water Treatment";
      value: "commercial.utility.waterTreatment.water";
    }
  | {
      description: "Gas / Oil Storage / Distribution";
      value: "commercial.utility.oilGas";
    }
  | {
      description: "Gas Governor";
      value: "commercial.utility.oilGas.gasGovernor";
    }
  | {
      description: "Gas Holder";
      value: "commercial.utility.oilGas.gasHolder";
    }
  | {
      description: "Oil Terminal";
      value: "commercial.utility.oilGas.oilTerminal";
    }
  | {
      description: "Other Utility Use";
      value: "commercial.utility.other";
    }
  | {
      description: "Cable Terminal Station";
      value: "commercial.utility.other.cableTerminal";
    }
  | {
      description: "Observatory";
      value: "commercial.utility.other.observatory";
    }
  | {
      description: "Radar Station";
      value: "commercial.utility.other.radar";
    }
  | {
      description: "Satellite Earth Station";
      value: "commercial.utility.other.satelliteEarth";
    }
  | {
      description: "Waste Management";
      value: "commercial.utility.wasteManagement";
    }
  | {
      description: "Telephone Box";
      value: "commercial.utility.publicPhone.box";
    }
  | {
      description: "Other Public Telephones";
      value: "commercial.utility.publicPhone.other";
    }
  | {
      description: "Dam";
      value: "commercial.utility.dam";
    }
  | {
      description: "Emergency / Rescue Service";
      value: "commercial.emergency";
    }
  | {
      description: "Nautical Navigation Beacon / Light";
      value: "other.navigation.nautical.beacon";
    }
  | {
      description: "Aid To Road Navigation";
      value: "other.navigation.road";
    }
  | {
      description: "Guide Post";
      value: "other.navigation.guidePost";
    }
  | {
      description: "Coastal Protection / Flood Prevention";
      value: "other.coastal";
    }
  | {
      description: "Boulder Wall / Sea Wall";
      value: "other.coastal.wall";
    }
  | {
      description: "Flood Gate / Flood Sluice Gate / Flood Valve";
      value: "other.coastal.floodGate";
    }
  | {
      description: "Groyne";
      value: "other.coastal.groyne";
    }
  | {
      description: "Rip-Rap";
      value: "other.coastal.ripRap";
    }
  | {
      description: "Emergency Support";
      value: "other.emergency";
    }
  | {
      description: "Beach Office / First Aid Facility";
      value: "other.emergency.firstAid";
    }
  | {
      description: "Emergency Telephone (Non Motorway)";
      value: "other.emergency.telephone";
    }
  | {
      description: "Fire Alarm Structure / Fire Observation Tower / Fire Beater Facility";
      value: "other.emergency.fire";
    }
  | {
      description: "Emergency Equipment Point / Emergency Siren / Warning Flag";
      value: "other.emergency.warning";
    }
  | {
      description: "Lifeguard Facility";
      value: "other.emergency.lifeguard";
    }
  | {
      description: "LIfe / Belt / Buoy / Float / Jacket / Safety Rope";
      value: "other.emergency.floatAids";
    }
  | {
      description: "Street Furniture";
      value: "other.streetFurniture";
    }
  | {
      description: "Agricultural Support Objects";
      value: "other.agriculture";
    }
  | {
      description: "Fish Ladder / Lock / Pen / Trap";
      value: "other.agriculture.fishPen";
    }
  | {
      description: "Livestock Pen / Dip";
      value: "other.agriculture.livestockPen";
    }
  | {
      description: "Currick";
      value: "other.agriculture.currick";
    }
  | {
      description: "Slurry Bed / Pit";
      value: "other.agriculture.slurry";
    }
  | {
      description: "Historical Site / Object";
      value: "other.historic";
    }
  | {
      description: "Historic Structure / Object";
      value: "other.historic.structure";
    }
  | {
      description: "Industrial Support";
      value: "other.industrial";
    }
  | {
      description: "Adit / Incline / Level";
      value: "other.industrial.aditIncline";
    }
  | {
      description: "Caisson / Dry Dock / Grid";
      value: "other.industrial.caissonDock";
    }
  | {
      description: "Channel / Conveyor / Conduit / Pipe";
      value: "other.industrial.channel";
    }
  | {
      description: "Chimney / Flue";
      value: "other.industrial.chimney";
    }
  | {
      description: "Crane / Hoist / Winch / Material Elevator";
      value: "other.industrial.crane";
    }
  | {
      description: "Flare Stack";
      value: "other.industrial.flareStack";
    }
  | {
      description: "Hopper / Silo / Cistern / Tank";
      value: "other.industrial.siloTank";
    }
  | {
      description: "Grab / Skip / Other Industrial Waste Machinery / Discharging";
      value: "other.industrial.discharge";
    }
  | {
      description: "Kiln / Oven / Smelter";
      value: "other.industrial.kiln";
    }
  | {
      description: "Manhole / Shaft";
      value: "other.industrial.manholeShaft";
    }
  | {
      description: "Industrial Overflow / Sluice / Valve / Valve Housing";
      value: "other.industrial.overflowSluiceValve";
    }
  | {
      description: "Cooling Tower";
      value: "other.industrial.coolingTower";
    }
  | {
      description: "Solar Panel / Waterwheel";
      value: "other.industrial.solarPanel";
    }
  | {
      description: "Telephone Pole / Post";
      value: "other.industrial.pylon.telecom";
    }
  | {
      description: "Electricity Distribution Pole / Pylon";
      value: "other.industrial.pylon.electricity";
    }
  | {
      description: "Significant Natural Object";
      value: "other.natural";
    }
  | {
      description: "Boundary / Significant / Historic Tree / Pollard";
      value: "other.natural.tree";
    }
  | {
      description: "Boundary / Significant Rock / Boulder";
      value: "other.natural.rock";
    }
  | {
      description: "Natural Hole (Blow / Shake / Swallow)";
      value: "other.natural.hole";
    }
  | {
      description: "Ornamental / Cultural Object";
      value: "other.ornamental";
    }
  | {
      description: "Mausoleum / Tomb / Grave";
      value: "other.ornamental.tomb";
    }
  | {
      description: "Simple Ornamental Object";
      value: "other.ornamental.object";
    }
  | {
      description: "Maze";
      value: "other.ornamental.maze";
    }
  | {
      description: "Sport / Leisure Support";
      value: "other.leisure";
    }
  | {
      description: "Butt / Hide";
      value: "other.leisure.hide";
    }
  | {
      description: "Gallop / Ride";
      value: "other.leisure.gallop";
    }
  | {
      description: "Miniature Railway";
      value: "other.leisure.modelRailway";
    }
  | {
      description: "Royal Mail Infrastructure";
      value: "other.mail";
    }
  | {
      description: "Postal Box";
      value: "other.mail.postBox";
    }
  | {
      description: "Postal Delivery Box / Pouch";
      value: "other.mail.deliveryBox";
    }
  | {
      description: "PO Box";
      value: "other.mail.POBox";
    }
  | {
      description: "Additional Mail / Packet Addressee";
      value: "other.mail.additionalAddressee";
    }
  | {
      description: "Scientific / Observation Support";
      value: "other.scientific";
    }
  | {
      description: "Meteorological Station / Equipment";
      value: "other.scientific.meteo";
    }
  | {
      description: "Radar / Satellite Infrastructure";
      value: "other.scientific.radarSatellite";
    }
  | {
      description: "Telescope / Observation Infrastructure / Astronomy";
      value: "other.scientific.astronomy";
    }
  | {
      description: "Transport Support";
      value: "other.transport";
    }
  | {
      description: "Cattle Grid / Ford";
      value: "other.transport.cattleGridFord";
    }
  | {
      description: "Elevator / Escalator / Steps";
      value: "other.transport.stepsLiftEscalator";
    }
  | {
      description: "Footbridge / Walkway";
      value: "other.transport.bridge";
    }
  | {
      description: "Pole / Post / Bollard (Restricting Vehicular Access)";
      value: "other.transport.post";
    }
  | {
      description: "Subway / Underpass";
      value: "other.transport.subway";
    }
  | {
      description: "Customs Inspection Facility";
      value: "other.transport.customs";
    }
  | {
      description: "Lay-By";
      value: "other.transport.layby";
    }
  | {
      description: "Level Crossing";
      value: "other.transport.rail.crossing.vehicles";
    }
  | {
      description: "Mail Pick Up";
      value: "other.transport.mailPickUp";
    }
  | {
      description: "Railway Pedestrian Crossing";
      value: "other.transport.rail.crossing.pedestrian";
    }
  | {
      description: "Railway Buffer";
      value: "other.transport.rail.buffer";
    }
  | {
      description: "Rail Drag";
      value: "other.transport.rail.drag";
    }
  | {
      description: "Rail Infrastructure Services";
      value: "other.transport.rail.infrastructure";
    }
  | {
      description: "Rail Kilometre Distance Marker";
      value: "other.transport.rail.marker.km";
    }
  | {
      description: "Railway Lighting";
      value: "other.transport.rail.lighting";
    }
  | {
      description: "Rail Mile Distance Marker";
      value: "other.transport.rail.market.mile";
    }
  | {
      description: "Railway Turntable";
      value: "other.transport.rail.turntable";
    }
  | {
      description: "Rail Weighbridge";
      value: "other.transport.rail.weighbridge";
    }
  | {
      description: "Rail Signalling";
      value: "other.transport.rail.signals";
    }
  | {
      description: "Railway Traverse";
      value: "other.transport.rail.traverse";
    }
  | {
      description: "Goods Tramway";
      value: "other.transport.goodsTramway";
    }
  | {
      description: "Road Drag";
      value: "other.transport.road.drag";
    }
  | {
      description: "Vehicle Dip";
      value: "other.transport.road.vehicleDip";
    }
  | {
      description: "Road Turntable";
      value: "other.transport.road.turntable";
    }
  | {
      description: "Road Mile Distance Marker";
      value: "other.transport.road.marker.mile";
    }
  | {
      description: "Road Kilometre Distance Marker";
      value: "other.transport.road.market.km";
    }
  | {
      description: "Road Infrastructure Services";
      value: "other.transport.road.infrastructure";
    }
  | {
      description: "Unsupported Site";
      value: "other.unsupported";
    }
  | {
      description: "Cycle Parking Facility";
      value: "other.unsupported.cycleParking";
    }
  | {
      description: "Picnic / Barbeque Site";
      value: "other.unsupported.picnic";
    }
  | {
      description: "Travelling Persons Site";
      value: "other.unsupported.travellingPersons";
    }
  | {
      description: "Shelter (Not Including Bus Shelter)";
      value: "other.unsupported.shelter";
    }
  | {
      description: "Street Record";
      value: "parent.street";
    }
  | {
      description: "Residential";
      value: "residential";
    }
  | {
      description: "Ancillary Building";
      value: "residential.building";
    }
  | {
      description: "Car Park Space";
      value: "residential.carParkingSpace";
    }
  | {
      description: "Allocated Parking";
      value: "residential.carParkingSpace.allocated";
    }
  | {
      description: "Residential dwelling";
      value: "residential.dwelling";
    }
  | {
      description: "Caravan";
      value: "residential.dwelling.caravan";
    }
  | {
      description: "Detached";
      value: "residential.dwelling.house.detached";
    }
  | {
      description: "Semi-detached";
      value: "residential.dwelling.house.semiDetached";
    }
  | {
      description: "Terrace";
      value: "residential.dwelling.house.terrace";
    }
  | {
      description: "Flat";
      value: "residential.dwelling.flat";
    }
  | {
      description: "House Boat";
      value: "residential.dwelling.boat";
    }
  | {
      description: "Sheltered Accommodation";
      value: "residential.dwelling.shelteredAccommodation";
    }
  | {
      description: "Privately Owned Holiday Caravan / Chalet";
      value: "residential.dwelling.holiday";
    }
  | {
      description: "Garage";
      value: "residential.garage";
    }
  | {
      description: "Lock-Up Garage / Garage Court";
      value: "residential.garage.court";
    }
  | {
      description: "House In Multiple Occupation";
      value: "residential.HMO";
    }
  | {
      description: "HMO Parent";
      value: "residential.HMO.parent";
    }
  | {
      description: "HMO Bedsit / Other Non Self Contained Accommodation";
      value: "residential.HMO.bedsit";
    }
  | {
      description: "HMO Not Further Divided";
      value: "residential.HMO.undivided";
    }
  | {
      description: "Residential Institution";
      value: "residential.institution";
    }
  | {
      description: "Care / Nursing Home";
      value: "residential.institution.care";
    }
  | {
      description: "Communal Residence";
      value: "residential.institution.communal";
    }
  | {
      description: "Non-Commercial Lodgings";
      value: "residential.institution.noncommercial";
    }
  | {
      description: "Religious Community";
      value: "residential.institution.religious";
    }
  | {
      description: "Residential Education";
      value: "residential.institution.education";
    }
  | {
      description: "Unclassified";
      value: "unclassified";
    }
  | {
      description: "Awaiting Classification";
      value: "unclassified.awaitingclassification";
    }
  | {
      description: "Pending Internal Investigation";
      value: "unclassified.pendingInvestigation";
    }
  | {
      description: "Dual Use";
      value: "dualUse";
    }
  | {
      description: "Object of Interest";
      value: "object";
    }
  | {
      description: "Archaeological Dig Site";
      value: "object.archaeological";
    }
  | {
      description: "Monument";
      value: "object.monument";
    }
  | {
      description: "Obelisk / Milestone / Standing Stone";
      value: "object.monument.vertical";
    }
  | {
      description: "Obelisk";
      value: "object.monument.vertical.obelisk";
    }
  | {
      description: "Standing Stone";
      value: "object.monument.vertical.standingStone";
    }
  | {
      description: "Memorial / Market Cross";
      value: "object.monument.memorial";
    }
  | {
      description: "Statue";
      value: "object.monument.statue";
    }
  | {
      description: "Castle / Historic Ruin";
      value: "object.monument.ruin";
    }
  | {
      description: "Other Structure";
      value: "object.monument.other";
    }
  | {
      description: "Boundary Stone";
      value: "object.monument.other.boundaryStone";
    }
  | {
      description: "Cascade / Fountain";
      value: "object.monument.other.waterFeature";
    }
  | {
      description: "Permanent Art Display / Sculpture";
      value: "object.monument.other.art";
    }
  | {
      description: "Windmill (Inactive)";
      value: "object.monument.other.windmill";
    }
  | {
      description: "Stately Home";
      value: "object.statelyHome";
    }
  | {
      description: "Underground Feature";
      value: "object.underground";
    }
  | {
      description: "Cave";
      value: "object.underground.cave";
    }
  | {
      description: "Pothole / Natural Hole";
      value: "object.underground.hole";
    }
  | {
      description: "Other Underground Feature";
      value: "object.underground.other";
    }
  | {
      description: "Cellar";
      value: "object.underground.other.cellar";
    }
  | {
      description: "Disused Mine";
      value: "object.underground.other.extraction";
    }
  | {
      description: "Mineral Mining / Inactive";
      value: "object.underground.other.extraction.mine";
    }
  | {
      description: "Oil And / Gas Extraction/ Inactive";
      value: "object.underground.other.extraction.oilGas";
    }
  | {
      description: "Mineral Quarrying And / Open Extraction / Inactive";
      value: "object.underground.other.extraction.quarry";
    }
  | {
      description: "Well / Spring";
      value: "object.underground.other.water";
    }
  | {
      description: "Spring";
      value: "object.underground.other.water.spring";
    }
  | {
      description: "Well";
      value: "object.underground.other.water.well";
    }
  | {
      description: "Place Of Worship";
      value: "object.religious";
    }
  | {
      description: "Religious building";
      value: "object.religious.building";
    }
  | {
      description: "Abbey";
      value: "object.religious.building.abbey";
    }
  | {
      description: "Cathedral";
      value: "object.religious.building.cathedral";
    }
  | {
      description: "Church";
      value: "object.religious.building.church";
    }
  | {
      description: "Chapel";
      value: "object.religious.building.chapel";
    }
  | {
      description: "Gurdwara";
      value: "object.religious.building.gurdwara";
    }
  | {
      description: "Kingdom Hall";
      value: "object.religious.building.kingdomHall";
    }
  | {
      description: "Lych Gate";
      value: "object.religious.building.lychGate";
    }
  | {
      description: "Mosque";
      value: "object.religious.building.mosque";
    }
  | {
      description: "Minster";
      value: "object.religious.building.minster";
    }
  | {
      description: "Stupa";
      value: "object.religious.building.stupa";
    }
  | {
      description: "Synagogue";
      value: "object.religious.building.synagogue";
    }
  | {
      description: "Temple";
      value: "object.religious.building.temple";
    };
/**
 * Tenure types tracked throughout the UK
 */
export type UKTenureType =
  | {
      description: "Affordable home ownership";
      value: "AHO";
    }
  | {
      description: "Market housing";
      value: "MH";
    }
  | {
      description: "Other";
      value: "other";
    }
  | {
      description: "Social, affordable or interim rent";
      value: "SAIR";
    }
  | {
      description: "Self-build and custom build";
      value: "selfCustomBuild";
    }
  | {
      description: "Starter homes";
      value: "SH";
    };
/**
 * Residential unit types tracked throughout the UK
 */
export type UKResidentialUnitType =
  | {
      description: "Cluster flat";
      value: "cluster";
    }
  | {
      description: "Flat";
      value: "flat";
    }
  | {
      description: "House";
      value: "house";
    }
  | {
      description: "Other";
      value: "other";
    }
  | {
      description: "Sheltered housing";
      value: "sheltered";
    }
  | {
      description: "Studio or bedsit";
      value: "studio";
    };
export type LeadRegisteredSocialLandlord =
  | {
      description: string;
      status: true;
    }
  | {
      status: false;
    };
/**
 * Information about the proposed works and any changes to the property
 */
export type Proposal = BaseProposal | LondonProposal;
/**
 * Planning project types
 */
export type ProjectType =
  | {
      description: "Alter a building";
      value: "alter";
    }
  | {
      description: "Add or alter a balcony";
      value: "alter.balcony";
    }
  | {
      description: "Add or remove a bay window";
      value: "alter.bayWindow";
    }
  | {
      description: "Add a bay window";
      value: "alter.bayWindow.add";
    }
  | {
      description: "Add a bay window to the rear of the building";
      value: "alter.bayWindow.rear";
    }
  | {
      description: "Remove a bay window";
      value: "alter.bayWindow.remove";
    }
  | {
      description: "Changes to a fence, wall or gate";
      value: "alter.boundary";
    }
  | {
      description: "Add a new fence, wall or gate";
      value: "alter.boundary.add";
    }
  | {
      description: "Add a new fence";
      value: "alter.boundary.add.fence";
    }
  | {
      description: "Add a new gate";
      value: "alter.boundary.add.gate";
    }
  | {
      description: "Add a new boundary wall";
      value: "alter.boundary.add.wall";
    }
  | {
      description: "Change a fence, wall or gate";
      value: "alter.boundary.alter";
    }
  | {
      description: "Remove a fence, wall, or gate";
      value: "alter.boundary.remove";
    }
  | {
      description: "Repair a fence, wall or gate";
      value: "alter.boundary.repair";
    }
  | {
      description: "Repair a fence";
      value: "alter.boundary.repair.fence";
    }
  | {
      description: "Repair a gate";
      value: "alter.boundary.repair.gate";
    }
  | {
      description: "Repair a wall";
      value: "alter.boundary.repair.wall";
    }
  | {
      description: "Replace a fence, wall or gate";
      value: "alter.boundary.replace";
    }
  | {
      description: "Replace a fence";
      value: "alter.boundary.replace.fence";
    }
  | {
      description: "Replace a gate";
      value: "alter.boundary.replace.gate";
    }
  | {
      description: "Replace a wall";
      value: "alter.boundary.replace.wall";
    }
  | {
      description: "Install underground cables";
      value: "alter.cables";
    }
  | {
      description: "Change the material of a fence, wall or gate";
      value: "alter.changeOfMaterials.boundary";
    }
  | {
      description: "Change the material of chimneys";
      value: "alter.changeOfMaterials.chimney";
    }
  | {
      description: "Change the material of external doors";
      value: "alter.changeOfMaterials.externalDoors";
    }
  | {
      description: "Change the material of external walls";
      value: "alter.changeOfMaterials.externalWalls";
    }
  | {
      description: "Change the material of floors";
      value: "alter.changeOfMaterials.floors";
    }
  | {
      description: "Change the material of vehicle access or hardstanding";
      value: "alter.changeOfMaterials.hardstanding";
    }
  | {
      description: "Change the material of internal doors";
      value: "alter.changeOfMaterials.internalDoors";
    }
  | {
      description: "Change the material of internal walls";
      value: "alter.changeOfMaterials.internalWalls";
    }
  | {
      description: "Change the material of something else";
      value: "alter.changeOfMaterials.other";
    }
  | {
      description: "Change the material of rainwater goods";
      value: "alter.changeOfMaterials.rainwaterGoods";
    }
  | {
      description: "Change the material of roof coverings";
      value: "alter.changeOfMaterials.roofCovering";
    }
  | {
      description: "Change the material of windows";
      value: "alter.changeOfMaterials.windows";
    }
  | {
      description: "Change chimneys";
      value: "alter.chimneys";
    }
  | {
      description: "Add a chimney";
      value: "alter.chimneys.add";
    }
  | {
      description: "Replace a chimney";
      value: "alter.chimneys.replace";
    }
  | {
      description: "Add a verandah or deck";
      value: "alter.decks";
    }
  | {
      description: "Add a high verandah or deck";
      value: "alter.decksHigh";
    }
  | {
      description: "Work on drains";
      value: "alter.drains";
    }
  | {
      description: "Install equipment";
      value: "alter.equipment";
    }
  | {
      description: "Install an air conditioning unit";
      value: "alter.equipment.airConditioning";
    }
  | {
      description: "Install a security alarm";
      value: "alter.equipment.alarm";
    }
  | {
      description: "Install a satellite dish or aerial";
      value: "alter.equipment.antennae";
    }
  | {
      description: "Install an aerial antennea";
      value: "alter.equipment.antennae.aerial";
    }
  | {
      description: "Install a satellite dish";
      value: "alter.equipment.antennae.dish";
    }
  | {
      description: "Install a barbeque";
      value: "alter.equipment.bbq";
    }
  | {
      description: "Install a flue with a biomass burner";
      value: "alter.equipment.biomass";
    }
  | {
      description: "Install CCTV cameras";
      value: "alter.equipment.cctv";
    }
  | {
      description: "Install a car charging point";
      value: "alter.equipment.charging";
    }
  | {
      description: "Install a heat pump";
      value: "alter.equipment.heatPump";
    }
  | {
      description: "Install an air heat pump";
      value: "alter.equipment.heatPump.air";
    }
  | {
      description: "Install a ground heat pump";
      value: "alter.equipment.heatPump.ground";
    }
  | {
      description: "Install a water heat pump";
      value: "alter.equipment.heatPump.water";
    }
  | {
      description: "Install industrial equipment";
      value: "alter.equipment.industrial";
    }
  | {
      description: "Install outdoor lights";
      value: "alter.equipment.lighting";
    }
  | {
      description: "Install machinery";
      value: "alter.equipment.machinery";
    }
  | {
      description: "Install solar panels";
      value: "alter.equipment.solar";
    }
  | {
      description: "Install solar photovoltaics (PV)";
      value: "alter.equipment.solar.pv";
    }
  | {
      description: "Install solar thermal equipment";
      value: "alter.equipment.solar.thermal";
    }
  | {
      description: "Install an outdoor tank (for example a water tank)";
      value: "alter.equipment.tank";
    }
  | {
      description: "Install ventilation";
      value: "alter.equipment.ventilation";
    }
  | {
      description: "Install internet equipment";
      value: "alter.equipment.wifi";
    }
  | {
      description: "Install a wind turbine";
      value: "alter.equipment.wind";
    }
  | {
      description: "Change the material or colour of the external walls";
      value: "alter.facades";
    }
  | {
      description: "Change the insulation of the facade";
      value: "alter.facades.insulation";
    }
  | {
      description: "Paint the facade";
      value: "alter.facades.paint";
    }
  | {
      description: "Change the material or colour of the external walls to the rear of the building";
      value: "alter.facades.rear";
    }
  | {
      description: "Change the cladding of the facade";
      value: "alter.facades.reclad";
    }
  | {
      description: "Repair the facade";
      value: "alter.facades.repair";
    }
  | {
      description: "Changes to a public road, pavement or path (including drop kerb)";
      value: "alter.highways";
    }
  | {
      description: "Create a point of access to a highway";
      value: "alter.highways.access";
    }
  | {
      description: "Create a point of access to an unclassified road";
      value: "alter.highways.access.unclassified";
    }
  | {
      description: "Changes to a dropped kerb";
      value: "alter.highways.dropKerb";
    }
  | {
      description: "Changes to a dropped kerb";
      value: "alter.highways.droppedKerb";
    }
  | {
      description: "Add a dropped kerb";
      value: "alter.highways.droppedKerb.add";
    }
  | {
      description: "Remove a dropped kerb";
      value: "alter.highways.droppedKerb.remove";
    }
  | {
      description: "Changes to a road";
      value: "alter.highways.road";
    }
  | {
      description: "Add a road";
      value: "alter.highways.road.add";
    }
  | {
      description: "Remove a road";
      value: "alter.highways.road.remove";
    }
  | {
      description: "Install plant equipment or machinery";
      value: "alter.industrial.plant";
    }
  | {
      description: "Changes to internal walls or layout";
      value: "alter.internal";
    }
  | {
      description: "Landscaping works";
      value: "alter.landscape";
    }
  | {
      description: "Add or remove a residential lawn or garden";
      value: "alter.landscape.gardens";
    }
  | {
      description: "Add or remove a pond";
      value: "alter.landscape.ponds";
    }
  | {
      description: "Change a door or window opening";
      value: "alter.openings";
    }
  | {
      description: "Add a door or window opening";
      value: "alter.openings.add";
    }
  | {
      description: "Add one or more new doorways";
      value: "alter.openings.add.door";
    }
  | {
      description: "Add new doorways to the front of the building";
      value: "alter.openings.add.door.front";
    }
  | {
      description: "Add new doorways to the rear of the building";
      value: "alter.openings.add.door.rear";
    }
  | {
      description: "Add new doorways to the side of the building";
      value: "alter.openings.add.door.side";
    }
  | {
      description: "Add one or more new windows";
      value: "alter.openings.add.window";
    }
  | {
      description: "Add one or more new windows";
      value: "alter.openings.add.windows";
    }
  | {
      description: "Add new windows to the front of the building";
      value: "alter.openings.add.windows.front";
    }
  | {
      description: "Add new windows 1.7m up or higher";
      value: "alter.openings.add.windows.high";
    }
  | {
      description: "Add new windows to the rear of the building";
      value: "alter.openings.add.windows.rear";
    }
  | {
      description: "Add new shutters to windows";
      value: "alter.openings.add.windows.shutters";
    }
  | {
      description: "Add new windows to the side of the building";
      value: "alter.openings.add.windows.side";
    }
  | {
      description: "Change the size of doorways or windows";
      value: "alter.openings.alter";
    }
  | {
      description: "Convert a doorway into a window";
      value: "alter.openings.alter.convert.doorToWindow";
    }
  | {
      description: "Convert a window into a doorway";
      value: "alter.openings.alter.convert.windowToDoor";
    }
  | {
      description: "Enlarge a door opening";
      value: "alter.openings.alter.enlarge.door";
    }
  | {
      description: "Enlarge a window opening";
      value: "alter.openings.alter.enlarge.window";
    }
  | {
      description: "Enlarge a window opening on the front of a building";
      value: "alter.openings.alter.enlarge.window.front";
    }
  | {
      description: "Enlarge a window opening on the rear of a building";
      value: "alter.openings.alter.enlarge.window.rear";
    }
  | {
      description: "Enlarge a window opening on the side of a building";
      value: "alter.openings.alter.enlarge.window.side";
    }
  | {
      description: "Reduce the size of a door opening";
      value: "alter.openings.alter.reduce.door";
    }
  | {
      description: "Reduce the size of a window opening";
      value: "alter.openings.alter.reduce.window";
    }
  | {
      description: "Reduce the size of a window opening on the front of a building";
      value: "alter.openings.alter.reduce.window.front";
    }
  | {
      description: "Reduce the size of a window opening on the rear of a building";
      value: "alter.openings.alter.reduce.window.rear";
    }
  | {
      description: "Reduce the size of a window opening on the side of a building";
      value: "alter.openings.alter.reduce.window.side";
    }
  | {
      description: "Block up doorways or windows";
      value: "alter.openings.remove";
    }
  | {
      description: "Block up doorways";
      value: "alter.openings.remove.door";
    }
  | {
      description: "Block up windows";
      value: "alter.openings.remove.window";
    }
  | {
      description: "Install pipes";
      value: "alter.pipes";
    }
  | {
      description: "Remove part of a building (such as a decorative feature)";
      value: "alter.remove";
    }
  | {
      description: "Remove a chimney";
      value: "alter.remove.chimney";
    }
  | {
      description: "Remove a deck";
      value: "alter.remove.deck";
    }
  | {
      description: "Remove a drain";
      value: "alter.remove.drain";
    }
  | {
      description: "Remove energy equipment";
      value: "alter.remove.equipment";
    }
  | {
      description: "Remove part of a facade";
      value: "alter.remove.facade";
    }
  | {
      description: "Remove a soil pipe";
      value: "alter.remove.soilPipe";
    }
  | {
      description: "Remove a hard surface";
      value: "alter.remove.surface";
    }
  | {
      description: "Repair windows or doors";
      value: "alter.repair";
    }
  | {
      description: "Repair doors";
      value: "alter.repair.doors";
    }
  | {
      description: "Repair windows";
      value: "alter.repair.windows";
    }
  | {
      description: "Replace windows or doors";
      value: "alter.replace";
    }
  | {
      description: "Replace door with door";
      value: "alter.replace.doorsToDoors";
    }
  | {
      description: "Replace door with door on the front of a building";
      value: "alter.replace.doorsToDoors.front";
    }
  | {
      description: "Replace door with door on the rear of a building";
      value: "alter.replace.doorsToDoors.rear";
    }
  | {
      description: "Replace door with door on the side of a building";
      value: "alter.replace.doorsToDoors.side";
    }
  | {
      description: "Replace door with window";
      value: "alter.replace.doorsToWindows";
    }
  | {
      description: "Replace door with window on the front of a building";
      value: "alter.replace.doorsToWindows.front";
    }
  | {
      description: "Replace door with winoow on the rear of a building";
      value: "alter.replace.doorsToWindows.rear";
    }
  | {
      description: "Replace door with window on the side of a building";
      value: "alter.replace.doorsToWindows.side";
    }
  | {
      description: "Replace window with door";
      value: "alter.replace.windowsToDoors";
    }
  | {
      description: "Replace window with door on the front of a building";
      value: "alter.replace.windowsToDoors.front";
    }
  | {
      description: "Replace window with door on the rear of a building";
      value: "alter.replace.windowsToDoors.rear";
    }
  | {
      description: "Replace window with door on the side of a building";
      value: "alter.replace.windowsToDoors.side";
    }
  | {
      description: "Replace window with window";
      value: "alter.replace.windowsToWindows";
    }
  | {
      description: "Replace window with window on the front ofa building";
      value: "alter.replace.windowsToWindows.front";
    }
  | {
      description: "Replace window with window on the rear of a building";
      value: "alter.replace.windowsToWindows.rear";
    }
  | {
      description: "Replace window with window on the side of a building";
      value: "alter.replace.windowsToWindows.side";
    }
  | {
      description: "Change the roof";
      value: "alter.roof";
    }
  | {
      description: "Replace or change the roof materials";
      value: "alter.roof.materials";
    }
  | {
      description: "Add or change a roof parapet";
      value: "alter.roof.parapet";
    }
  | {
      description: "Add a roof terrace";
      value: "alter.roof.roofTerrace";
    }
  | {
      description: "Change the shape of a roof";
      value: "alter.roof.shape";
    }
  | {
      description: "Add skylights to an existing roof";
      value: "alter.rooflight";
    }
  | {
      description: "Add secondary glazing to a window";
      value: "alter.secondaryGlazing";
    }
  | {
      description: "Add or alter shop fronts";
      value: "alter.shopfronts";
    }
  | {
      description: "Add or alter shutters";
      value: "alter.shutters";
    }
  | {
      description: "Add an advert or sign";
      value: "alter.sign";
    }
  | {
      description: "Add or replace a soil pipe";
      value: "alter.soilPipes";
    }
  | {
      description: "Add or change an external staircase";
      value: "alter.staircase";
    }
  | {
      description: "Add a low surface";
      value: "alter.surfaceLow";
    }
  | {
      description: "Add a decked area or patio";
      value: "alter.surfaces";
    }
  | {
      description: "Add a decked area";
      value: "alter.surfaces.deck";
    }
  | {
      description: "Add a driveway or parking area";
      value: "alter.surfaces.parking";
    }
  | {
      description: "Extend a driveway or parking area";
      value: "alter.surfaces.parking.extend";
    }
  | {
      description: "Add a new driveway or parking area";
      value: "alter.surfaces.parking.new";
    }
  | {
      description: "Replace a driveway or parking area";
      value: "alter.surfaces.parking.replace";
    }
  | {
      description: "Add a patio";
      value: "alter.surfaces.patio";
    }
  | {
      description: "Extend a patio";
      value: "alter.surfaces.patio.extend";
    }
  | {
      description: "Add a new patio";
      value: "alter.surfaces.patio.new";
    }
  | {
      description: "Replace a patio";
      value: "alter.surfaces.patio.replace";
    }
  | {
      description: "Install a swimming pool";
      value: "alter.swimmingPool";
    }
  | {
      description: "Install an indoor swimming pool";
      value: "alter.swimmingPool.indoor";
    }
  | {
      description: "Install an outdoor swimming pool";
      value: "alter.swimmingPool.outdoor";
    }
  | {
      description: "Changes to trees or hedges";
      value: "alter.trees";
    }
  | {
      description: "Changes to hedges";
      value: "alter.trees.hedge";
    }
  | {
      description: "Let hedges grow";
      value: "alter.trees.hedge.letGrow";
    }
  | {
      description: "New hedges";
      value: "alter.trees.hedge.new";
    }
  | {
      description: "Prune hedges";
      value: "alter.trees.hedge.prune";
    }
  | {
      description: "Remove hedges";
      value: "alter.trees.hedge.remove";
    }
  | {
      description: "Changes to trees";
      value: "alter.trees.tree";
    }
  | {
      description: "New trees";
      value: "alter.trees.tree.new";
    }
  | {
      description: "Prune trees";
      value: "alter.trees.tree.prune";
    }
  | {
      description: "Remove trees";
      value: "alter.trees.tree.remove";
    }
  | {
      description: "Change the use of a building";
      value: "changeOfUse";
    }
  | {
      description: "Convert part of the property into a  granny flat (residential annexe)";
      value: "changeOfUse.annexe";
    }
  | {
      description: "Use a caravan or mobile home on the property";
      value: "changeOfUse.caravans";
    }
  | {
      description: "Convert an extension";
      value: "changeOfUse.extension";
    }
  | {
      description: "Convert a garage";
      value: "changeOfUse.garage";
    }
  | {
      description: "Change the use of land";
      value: "changeOfUse.land";
    }
  | {
      description: "Let a part of the property";
      value: "changeOfUse.let.part";
    }
  | {
      description: "Let the property";
      value: "changeOfUse.let.whole";
    }
  | {
      description: "Convert or change the use of an outbuilding (such as a shed, garage or barn)";
      value: "changeOfUse.outbuilding";
    }
  | {
      description: "Convert or change the use of part of a building";
      value: "changeOfUse.part";
    }
  | {
      description: "Change the use of a property";
      value: "changeOfUse.property";
    }
  | {
      description: "Convert or change the use of a whole building";
      value: "changeOfUse.whole";
    }
  | {
      description: "Convert a home to bedsits or a shared home";
      value: "changeOfUse.whole.homeToHMO";
    }
  | {
      description: "Work from home";
      value: "changeOfUse.workFromHome";
    }
  | {
      description: "Demolish a building";
      value: "demolish";
    }
  | {
      description: "Demolish a fence, gate or boundary wall";
      value: "demolish.boundary";
    }
  | {
      description: "Total demolition of a building";
      value: "demolish.full";
    }
  | {
      description: "Demolish internal walls";
      value: "demolish.internal";
    }
  | {
      description: "Demolish a listed building";
      value: "demolish.listed";
    }
  | {
      description: "Total demolition of a isted building";
      value: "demolish.listed.full";
    }
  | {
      description: "Demolish part of a listed building";
      value: "demolish.listed.part";
    }
  | {
      description: "Demolish an outbuilding (such as a garage or barn)";
      value: "demolish.outbuilding";
    }
  | {
      description: "Total demolition of an outbuilding (such as a garage or barn)";
      value: "demolish.outbuilding.full";
    }
  | {
      description: "Demolish part of an outbuilding (such as a garage or barn)";
      value: "demolish.outbuilding.part";
    }
  | {
      description: "Demolish part of a building (such as an extension)";
      value: "demolish.part";
    }
  | {
      description: "Demolish part of a conservatory";
      value: "demolish.part.conservatory";
    }
  | {
      description: "Demolish a building and build homes in its place";
      value: "demolish.replace";
    }
  | {
      description: "Extend a building or add an outbuilding";
      value: "extend";
    }
  | {
      description: "Enlarge a balcony";
      value: "extend.balcony";
    }
  | {
      description: "Add a basement extension";
      value: "extend.basement";
    }
  | {
      description: "Enlarge a basement";
      value: "extend.basement.extend";
    }
  | {
      description: "Add a lightwell";
      value: "extend.basement.lightwell";
    }
  | {
      description: "Add a new basement extension";
      value: "extend.basement.new";
    }
  | {
      description: "Add a front extension";
      value: "extend.front";
    }
  | {
      description: "Add an outbuilding (such as a shed, garage or garden office)";
      value: "extend.outbuilding";
    }
  | {
      description: "Add an outbuilding - animal enclosure, aviary or beehive";
      value: "extend.outbuilding.animals";
    }
  | {
      description: 'Add an outbuilding - residential (or "granny") annexe';
      value: "extend.outbuilding.annexe";
    }
  | {
      description: "Add an outbuilding - bedroom or guest room";
      value: "extend.outbuilding.bedroom";
    }
  | {
      description: "Add an outbuilding - games room";
      value: "extend.outbuilding.games";
    }
  | {
      description: "Add an outbuilding - garage";
      value: "extend.outbuilding.garage";
    }
  | {
      description: "Add an outbuilding - greenhouse";
      value: "extend.outbuilding.greenhouse";
    }
  | {
      description: "Add an outbuilding - gym";
      value: "extend.outbuilding.gym";
    }
  | {
      description: "Add an outbuilding - office";
      value: "extend.outbuilding.office";
    }
  | {
      description: "Add an outbuilding - something else";
      value: "extend.outbuilding.other";
    }
  | {
      description: "Add an outbuilding - play house";
      value: "extend.outbuilding.play";
    }
  | {
      description: "Add an outbuilding - sauna";
      value: "extend.outbuilding.sauna";
    }
  | {
      description: "Add an outbuilding - shed";
      value: "extend.outbuilding.shed";
    }
  | {
      description: "Add an outbuilding - car parking or smoking shelter";
      value: "extend.outbuilding.shelter";
    }
  | {
      description: "Add an outbuilding - storage";
      value: "extend.outbuilding.store";
    }
  | {
      description: "Add an outbuilding - studio";
      value: "extend.outbuilding.studio";
    }
  | {
      description: "Add an outbuilding - summer house";
      value: "extend.outbuilding.summerHouse";
    }
  | {
      description: "Add an outbuilding - swimming pool";
      value: "extend.outbuilding.swimmingPool";
    }
  | {
      description: "Add an outbuilding - tank";
      value: "extend.outbuilding.tank";
    }
  | {
      description: "Add an outbuilding - workshop";
      value: "extend.outbuilding.workshop";
    }
  | {
      description: "Add a porch";
      value: "extend.porch";
    }
  | {
      description: "Add a porch to the front of the building";
      value: "extend.porch.front";
    }
  | {
      description: "Add a porch to the rear of the building";
      value: "extend.porch.rear";
    }
  | {
      description: "Add a porch to the side of the building";
      value: "extend.porch.side";
    }
  | {
      description: "Add a rear or side extension (or conservatory)";
      value: "extend.rear";
    }
  | {
      description: "Add a rear extension";
      value: "extend.rear.rear";
    }
  | {
      description: "Add a side extension";
      value: "extend.rear.side";
    }
  | {
      description: "Add a roof extension";
      value: "extend.roof";
    }
  | {
      description: "Join two roofs";
      value: "extend.roof.connect";
    }
  | {
      description: "Add a roof dormer";
      value: "extend.roof.dormer";
    }
  | {
      description: "Add a roof dormer to the front of the building";
      value: "extend.roof.dormer.front";
    }
  | {
      description: "Add a roof dormer to the front and rear of the building";
      value: "extend.roof.dormer.frontAndRear";
    }
  | {
      description: "Add a mansard roof";
      value: "extend.roof.dormer.mansard";
    }
  | {
      description: "Add a roof dormer to the rear of the building";
      value: "extend.roof.dormer.rear";
    }
  | {
      description: "Add a roof dormer to the side of the building";
      value: "extend.roof.dormer.side";
    }
  | {
      description: "Convert a hip roof to a gable";
      value: "extend.roof.hiptogable";
    }
  | {
      description: "Convert a hip roof to a gable";
      value: "extend.roof.hipToGable";
    }
  | {
      description: "Convert to a mansard roof";
      value: "extend.roof.mansard";
    }
  | {
      description: "Add one or more new storeys";
      value: "extend.roof.newstorey";
    }
  | {
      description: "Add one or more new storeys";
      value: "extend.roof.newStorey";
    }
  | {
      description: "Convert to a sloping roof";
      value: "extend.roof.slope";
    }
  | {
      description: "Add a side extension";
      value: "extend.side";
    }
  | {
      description: "Add an upper storey extension";
      value: "extend.upperStorey";
    }
  | {
      description: "Internal building works, such as change the internal layout";
      value: "internal";
    }
  | {
      description: "Alter internal doors";
      value: "internal.doorways";
    }
  | {
      description: "Alter internal finishes";
      value: "internal.finishes";
    }
  | {
      description: "Alter internal floors";
      value: "internal.floors";
    }
  | {
      description: "Convert a loft";
      value: "internal.loft";
    }
  | {
      description: "Add a mezzanine floor";
      value: "internal.mezzanine";
    }
  | {
      description: "Alter internal staircases";
      value: "internal.staircases";
    }
  | {
      description: "Alter internal walls";
      value: "internal.walls";
    }
  | {
      description: "Alter internal window openings";
      value: "internal.windows.openings";
    }
  | {
      description: "Maintenance of an existing structure";
      value: "maintain";
    }
  | {
      description: "Add a new separate building or self-contained units";
      value: "new";
    }
  | {
      description: "New agricultural buildings";
      value: "new.agriculture";
    }
  | {
      description: "New agricultural buildings - glasshouse";
      value: "new.agriculture.glasshouse";
    }
  | {
      description: "New agricultural buildings - mining";
      value: "new.agriculture.mining";
    }
  | {
      description: "New agricultural buildings - pigs";
      value: "new.agriculture.pigs";
    }
  | {
      description: "New agricultural buildings - poultry";
      value: "new agriculture.poultry";
    }
  | {
      description: "Install click and collect facilities";
      value: "new.clickCollect";
    }
  | {
      description: "New, self-contained dwelling";
      value: "new.dwelling";
    }
  | {
      description: "New flats";
      value: "new.dwelling.flat";
    }
  | {
      description: "New houses";
      value: "new.dwelling.house";
    }
  | {
      description: "Build new forestry buildings";
      value: "new.forestry";
    }
  | {
      description: "New industrial premises";
      value: "new.industrial";
    }
  | {
      description: "New waste disposal facilities";
      value: "new.industrial.waste";
    }
  | {
      description: "New leisure premises";
      value: "new.leisure";
    }
  | {
      description: "New offices";
      value: "new.office";
    }
  | {
      description: "Add another type of building - something else";
      value: "new.other";
    }
  | {
      description: "Build new homes";
      value: "new.residential.dwelling";
    }
  | {
      description: "New retail premises";
      value: "new.retail";
    }
  | {
      description: "Install telecommunications equipment";
      value: "new.telecoms";
    }
  | {
      description: "Build a temporary structure";
      value: "new.temporaryStructure";
    }
  | {
      description: "New storage or distribution premises";
      value: "new.warehouse";
    }
  | {
      description: "Negate a project type";
      value: "not";
    }
  | {
      description: "Do not add or change windows or doors";
      value: "not.alter.replace";
    }
  | {
      description: "Do not add or change a rooflight";
      value: "not.alter.rooflight";
    }
  | {
      description: "Do not add or change a dropped kerb";
      value: "not.dropKerb";
    }
  | {
      description: "Repairs";
      value: "repair";
    }
  | {
      description: "Repair the historic fabric";
      value: "repair.historicFabric";
    }
  | {
      description: "Other project type";
      value: "other";
    }
  | {
      description: "Change of units";
      value: "unit";
    }
  | {
      description: "Convert two or more properties into one";
      value: "unit.merge";
    }
  | {
      description: "Convert a home or part of a home into flats";
      value: "unit.subdivide";
    };
/**
 * Designations of natural open spaces
 */
export type OpenSpaceDesignation =
  | {
      description: "Green Belt";
      value: "greenBelt";
    }
  | {
      description: "Local Open Spaces";
      value: "local";
    }
  | {
      description: "Metropolitan Open Land";
      value: "metropolitan";
    }
  | {
      description: "Not designated";
      value: "none";
    }
  | {
      description: "Other designation";
      value: "other";
    };
/**
 * Types of natural open spaces
 */
export type OpenSpaceType =
  | {
      description: "Allotments, community gardens and city farms";
      value: "allotment";
    }
  | {
      description: "Amenity";
      value: "amenity";
    }
  | {
      description: "Brownfield land";
      value: "brownfield";
    }
  | {
      description: "Cemeteries, churchyards and other burial grounds";
      value: "burial";
    }
  | {
      description: "Provision for children and young people";
      value: "children";
    }
  | {
      description: "Civic spaces";
      value: "civic";
    }
  | {
      description: "Countryside in urban fringe areas";
      value: "fringe";
    }
  | {
      description: "Green corridors";
      value: "greenCorridor";
    }
  | {
      description: "Natural and semi-natural";
      value: "natural";
    }
  | {
      description: "Non-residential institution grounds or gardens";
      value: "nonResidential";
    }
  | {
      description: "Parks and gardens";
      value: "park";
    }
  | {
      description: "Residential gardens";
      value: "residential";
    }
  | {
      description: "Outdoor sports facilities";
      value: "sport";
    };
/**
 * Designations of natural protected spaces
 */
export type ProtectedSpaceDesignation =
  | {
      description: "Site of Borough Grade 1 Importance";
      value: "boroughGradeOne";
    }
  | {
      description: "Site of Borough Grade 2 Importance";
      value: "boroughGradeTwo";
    }
  | {
      description: "Site of Local Importance";
      value: "local";
    }
  | {
      description: "Local Nature Reserve";
      value: "localReserve";
    }
  | {
      description: "Site of Metropolitan Importance";
      value: "metropolitan";
    }
  | {
      description: "Not designated";
      value: "none";
    }
  | {
      description: "Sites of Special Scientific Interest";
      value: "SSSI";
    };
/**
 * Building regulations
 */
export type BuildingRegulation =
  | {
      description: "Part M4(2) of the Building Regulations 2010";
      value: "m42";
    }
  | {
      description: "Part M4(3)(2a) of the Building Regulations 2010";
      value: "m432a";
    }
  | {
      description: "Part M4(3)(2b) of the Building Regulations 2010";
      value: "m432b";
    }
  | {
      description: "None of these";
      value: "none";
    };
/**
 * Development types
 */
export type DevelopmentType =
  | {
      description: "Change of use";
      value: "changeOfUse";
    }
  | {
      description: "Change of use of an existing single home";
      value: "changeOfUseFrom";
    }
  | {
      description: "Change of use to a home";
      value: "changeOfUseTo";
    }
  | {
      description: "Conversion";
      value: "conversion";
    }
  | {
      description: "Extension";
      value: "extension";
    }
  | {
      description: "New build";
      value: "newBuild";
    }
  | {
      description: "Not known";
      value: "notKnown";
    };
/**
 * Housing provider categories tracked by the Greater London Authority (GLA)
 */
export type GLAHousingProvider =
  | {
      description: "Other affordable housing provider";
      value: "affordableHousing";
    }
  | {
      description: "Council delivered build to rent";
      value: "councilBuildToRent";
    }
  | {
      description: "Council delivery company";
      value: "councilDelivery";
    }
  | {
      description: "Housing association";
      value: "HA";
    }
  | {
      description: "Local Authority";
      value: "LA";
    }
  | {
      description: "Private";
      value: "private";
    }
  | {
      description: "Private rented sector";
      value: "privateRented";
    }
  | {
      description: "Other public authority";
      value: "publicAuthority";
    }
  | {
      description: "Self-build";
      value: "selfBuild";
    };
/**
 * Tenure types tracked by the Greater London Authority (GLA)
 */
export type GLATenureType =
  | {
      description: "Affordable rent (not at LAR benchmark rents)";
      value: "AR";
    }
  | {
      description: "Discount market rate";
      value: "DMR";
    }
  | {
      description: "Discount market rate (charged at London Living Rents)";
      value: "DMRLLR";
    }
  | {
      description: "Discount market sale";
      value: "DMS";
    }
  | {
      description: "London Affordable Rent";
      value: "LAR";
    }
  | {
      description: "London Living Rent";
      value: "LRR";
    }
  | {
      description: "London Shared Ownership";
      value: "LSO";
    }
  | {
      description: "Market for rent";
      value: "marketForRent";
    }
  | {
      description: "Market for sale";
      value: "marketForSale";
    }
  | {
      description: "Other";
      value: "other";
    }
  | {
      description: "Self-build and custom build";
      value: "selfCustomBuild";
    }
  | {
      description: "Starter homes";
      value: "SH";
    }
  | {
      description: "Shared equity";
      value: "sharedEquity";
    }
  | {
      description: "Social rent";
      value: "SR";
    };
/**
 * Residential unit types tracked by the Greater London Authority (GLA)
 */
export type GLAResidentialUnitType =
  | {
      description: "Cluster flat";
      value: "cluster";
    }
  | {
      description: "Co-living unit";
      value: "coLiving";
    }
  | {
      description: "Detached home";
      value: "detached";
    }
  | {
      description: "Flat/apartment or maisonette";
      value: "flat";
    }
  | {
      description: "House in multiple occupation (HMO)";
      value: "HMO";
    }
  | {
      description: "Hostel room";
      value: "hostel";
    }
  | {
      description: "Live/work unit";
      value: "LW";
    }
  | {
      description: "Other";
      value: "other";
    }
  | {
      description: "Semi-detached home";
      value: "semiDetached";
    }
  | {
      description: "Student accomodation";
      value: "student";
    }
  | {
      description: "Studio or bedsit";
      value: "studio";
    }
  | {
      description: "Terraced home";
      value: "terraced";
    };
/**
 * Types of planning documents and drawings
 */
export type FileType =
  | {
      description: "Details of impact on access, roads, and rights of way";
      value: "accessRoadsRightsOfWayDetails";
    }
  | {
      description: "Affordable housing statement";
      value: "affordableHousingStatement";
    }
  | {
      description: "Arboriculturist report";
      value: "arboriculturistReport";
    }
  | {
      description: "Bank statement";
      value: "bankStatement";
    }
  | {
      description: "Basement impact statement";
      value: "basementImpactStatement";
    }
  | {
      description: "Bio-aerosol assessment";
      value: "bioaerosolAssessment";
    }
  | {
      description: "Birdstrike risk management plan";
      value: "birdstrikeRiskManagementPlan";
    }
  | {
      description: "Borehole or trial pit analysis";
      value: "boreholeOrTrialPitAnalysis";
    }
  | {
      description: "Building control certificate";
      value: "buildingControlCertificate";
    }
  | {
      description: "Structural or building condition survey";
      value: "conditionSurvey";
    }
  | {
      description: "Construction invoice";
      value: "constructionInvoice";
    }
  | {
      description: "Contamination report";
      value: "contaminationReport";
    }
  | {
      description: "Council tax bill";
      value: "councilTaxBill";
    }
  | {
      description: "Crime prevention strategy";
      value: "crimePreventionStrategy";
    }
  | {
      description: "Design and Access Statement";
      value: "designAndAccessStatement";
    }
  | {
      description: "Evidence for application fee exemption - disability";
      value: "disabilityExemptionEvidence";
    }
  | {
      description: "Ecology report";
      value: "ecologyReport";
    }
  | {
      description: "Elevations - existing";
      value: "elevations.existing";
    }
  | {
      description: "Elevations - proposed";
      value: "elevations.proposed";
    }
  | {
      description: "Scheme for mitigation and monitoring of emissions (dust, odour and vibrations)";
      value: "emissionsMitigationAndMonitoringScheme";
    }
  | {
      description: "Energy statement";
      value: "energyStatement";
    }
  | {
      description: "Environmental Impact Assessment (EIA)";
      value: "environmentalImpactAssessment";
    }
  | {
      description: "External materials details";
      value: "externalMaterialsDetails";
    }
  | {
      description: "Fire safety report";
      value: "fireSafetyReport";
    }
  | {
      description: "Flood risk assessment (FRA)";
      value: "floodRiskAssessment";
    }
  | {
      description: "Floor plan - existing";
      value: "floorPlan.existing";
    }
  | {
      description: "Floor plan - proposed";
      value: "floorPlan.proposed";
    }
  | {
      description: "Foul drainage assessment";
      value: "foulDrainageAssessment";
    }
  | {
      description: "Geodiversity assessment";
      value: "geodiversityAssessment";
    }
  | {
      description: "Plans showing the stretches of hedgerows to be removed";
      value: "hedgerowsInformation";
    }
  | {
      description: "Evidence of the date of planting of the removed hedgerows";
      value: "hedgerowsInformation.plantingDate";
    }
  | {
      description: "Heritage Statement";
      value: "heritageStatement";
    }
  | {
      description: "Hydrological and hydrogeological assessment";
      value: "hydrologicalAssessment";
    }
  | {
      description: "Hydrology report";
      value: "hydrologyReport";
    }
  | {
      description: "Internal elevations";
      value: "internalElevations";
    }
  | {
      description: "Internal sections";
      value: "internalSections";
    }
  | {
      description: "Joiner's report";
      value: "joinersReport";
    }
  | {
      description: "Joinery section report";
      value: "joinerySections";
    }
  | {
      description: "Land contamination assessment";
      value: "landContaminationAssessment";
    }
  | {
      description: "Landscape and visual impact assessment (LVIA)";
      value: "landscapeAndVisualImpactAssessment";
    }
  | {
      description: "Landscape strategy or landscape plan";
      value: "landscapeStrategy";
    }
  | {
      description: "Lighting assessment";
      value: "lightingAssessment";
    }
  | {
      description: "Details of litter, vermin and bird control";
      value: "litterVerminAndBirdControlDetails";
    }
  | {
      description: "Location plan";
      value: "locationPlan";
    }
  | {
      description: "Method statement";
      value: "methodStatement";
    }
  | {
      description: "Minerals and waste assessment";
      value: "mineralsAndWasteAssessment";
    }
  | {
      description: "Information the authority considers necessary for the application";
      value: "necessaryInformation";
    }
  | {
      description: "New dwellings schedule";
      value: "newDwellingsSchedule";
    }
  | {
      description: "Noise assessment";
      value: "noiseAssessment";
    }
  | {
      description: "Open space assessment";
      value: "openSpaceAssessment";
    }
  | {
      description: "Other - document";
      value: "otherDocument";
    }
  | {
      description: "Other - drawing";
      value: "otherDrawing";
    }
  | {
      description: "Other - evidence or correspondence";
      value: "otherEvidence";
    }
  | {
      description: "Parking plan";
      value: "parkingPlan";
    }
  | {
      description: "Photographs - existing";
      value: "photographs.existing";
    }
  | {
      description: "Photographs - proposed";
      value: "photographs.proposed";
    }
  | {
      description: "Planning statement";
      value: "planningStatement";
    }
  | {
      description: "Recyclable waste storage details";
      value: "recycleWasteStorageDetails";
    }
  | {
      description: "Information the applicant considers relevant to the application";
      value: "relevantInformation";
    }
  | {
      description: "Residential units details";
      value: "residentialUnitsDetails";
    }
  | {
      description: "Roof plan - existing";
      value: "roofPlan.existing";
    }
  | {
      description: "Roof plan - proposed";
      value: "roofPlan.proposed";
    }
  | {
      description: "Sections - existing";
      value: "sections.existing";
    }
  | {
      description: "Sections - proposed";
      value: "sections.proposed";
    }
  | {
      description: "Site plan - existing";
      value: "sitePlan.existing";
    }
  | {
      description: "Site plan - proposed";
      value: "sitePlan.proposed";
    }
  | {
      description: "Sketch plan";
      value: "sketchPlan";
    }
  | {
      description: "Statement of community involvement";
      value: "statementOfCommunityInvolvement";
    }
  | {
      description: "Statutory declaration";
      value: "statutoryDeclaration";
    }
  | {
      description: "Details of storage treatment or disposal of waste";
      value: "storageTreatmentAndWasteDisposalDetails";
    }
  | {
      description: "Street scene drawing";
      value: "streetScene";
    }
  | {
      description: "Subsidence report";
      value: "subsidenceReport";
    }
  | {
      description: "Sunlight and daylight report";
      value: "sunlightAndDaylightReport";
    }
  | {
      description: "Sustainability statement";
      value: "sustainabilityStatement";
    }
  | {
      description: "Technical evidence";
      value: "technicalEvidence";
    }
  | {
      description: "Technical specification";
      value: "technicalSpecification";
    }
  | {
      description: "Tenancy agreement";
      value: "tenancyAgreement";
    }
  | {
      description: "Tenancy invoice";
      value: "tenancyInvoice";
    }
  | {
      description: "Town centre uses - Impact assessment";
      value: "townCentreImpactAssessment";
    }
  | {
      description: "Town centre uses - Sequential assessment";
      value: "townCentreSequentialAssessment";
    }
  | {
      description: "Transport assessment";
      value: "transportAssessment";
    }
  | {
      description: "Travel plan";
      value: "travelPlan";
    }
  | {
      description: "Location of trees and hedges";
      value: "treeAndHedgeLocation";
    }
  | {
      description: "Removed or pruned trees and hedges";
      value: "treeAndHedgeRemovedOrPruned";
    }
  | {
      description: "Tree canopy calculator";
      value: "treeCanopyCalculator";
    }
  | {
      description: "Tree condition report";
      value: "treeConditionReport";
    }
  | {
      description: "Tree plan";
      value: "treePlan";
    }
  | {
      description: "Trees report";
      value: "treesReport";
    }
  | {
      description: "Unit plan - existing";
      value: "unitPlan.existing";
    }
  | {
      description: "Unit plan - proposed";
      value: "unitPlan.proposed";
    }
  | {
      description: "Use plan - existing";
      value: "usePlan.existing";
    }
  | {
      description: "Use plan - proposed";
      value: "usePlan.proposed";
    }
  | {
      description: "Utility bill";
      value: "utilityBill";
    }
  | {
      description: "Utilities statement";
      value: "utilitiesStatement";
    }
  | {
      description: "Ventilation or extraction statement";
      value: "ventilationStatement";
    }
  | {
      description: "Viability Appraisal";
      value: "viabilityAppraisal";
    }
  | {
      description: "Visualisations";
      value: "visualisations";
    }
  | {
      description: "Waste and recycling strategy";
      value: "wasteAndRecyclingStrategy";
    }
  | {
      description: "Waste storage details";
      value: "wasteStorageDetails";
    }
  | {
      description: "Water environment assessment";
      value: "waterEnvironmentAssessment";
    };
/**
 * Details of the digital planning service which sent this application
 */
export type DigitalPlanningMetadata = AnyProviderMetadata | PlanXMetadata;
/**
 * Regex-based implementation of iso-date-time until available in ajv-formats@3.0.0
 */
export type DateTime = string;
export type UUID = string;
/**
 * The result of a single flagset
 */
export type ResultFlag =
  | {
      description: "It looks like the changes may now be beyond the time limit for enforcement action. This does not apply if the changes have been deliberately concealed.";
      value: "Planning permission / Immune";
    }
  | {
      description: "There is some key information missing that will be needed to assess this application.";
      value: "Planning permission / Missing information";
    }
  | {
      description: "It looks like the proposed changes may require planning permission.";
      value: "Planning permission / Permission needed";
    }
  | {
      description: "It looks like the proposed changes do not require planning permission, however the applicant must apply for Prior Approval before proceeding.";
      value: "Planning permission / Prior approval";
    }
  | {
      description: "It looks like the proposed changes may not require planning permission, however the applicant must provide notice to the planning authority before proceeding.";
      value: "Planning permission / Notice";
    }
  | {
      description: "It looks like the proposed changes may fall within the rules for Permitted Development and therefore would not need planning permission.";
      value: "Planning permission / Permitted development";
    }
  | {
      description: "It looks like the proposed changes may not fall within the legal definition of 'development', and therefore would not require planning permission.";
      value: "Planning permission / Not development";
    }
  | {
      description: "";
      value: "Listed building consent / Missing information";
    }
  | {
      description: "";
      value: "Listed building consent / Required";
    }
  | {
      description: "";
      value: "Listed building consent / De minimis";
    }
  | {
      description: "";
      value: "Listed building consent / Not required";
    }
  | {
      description: "";
      value: "Works to trees & hedges / Missing information";
    }
  | {
      description: "";
      value: "Works to trees & hedges / Required";
    }
  | {
      description: "";
      value: "Works to trees & hedges / De minimis";
    }
  | {
      description: "";
      value: "Works to trees & hedges / Not required";
    }
  | {
      description: "";
      value: "Demolition in a conservation area / Missing information";
    }
  | {
      description: "";
      value: "Demolition in a conservation area / Required";
    }
  | {
      description: "";
      value: "Demolition in a conservation area / De minimis";
    }
  | {
      description: "";
      value: "Demolition in a conservation area / Not required";
    }
  | {
      description: "";
      value: "Planning policy / Missing information";
    }
  | {
      description: "";
      value: "Planning policy / Fails to meet policy";
    }
  | {
      description: "";
      value: "Planning policy / Edge case";
    }
  | {
      description: "";
      value: "Planning policy / Meets policy";
    }
  | {
      description: "";
      value: "Community infrastructure levy / Missing information";
    }
  | {
      description: "";
      value: "Community infrastructure levy / Exemption void";
    }
  | {
      description: "";
      value: "Community infrastructure levy / Exempt";
    }
  | {
      description: "";
      value: "Community infrastructure levy / Relief void";
    }
  | {
      description: "";
      value: "Community infrastructure levy / Relief";
    }
  | {
      description: "";
      value: "Community infrastructure levy / Liable";
    }
  | {
      description: "";
      value: "Community infrastructure levy / Not liable";
    };
/**
 * The result of the application based on information provided by the applicant, prior to assessment by a planning officer. Results are determined by flags corresponding to responses; each application can have up to one result per flagset
 */
export type PreAssessment = ResultFlag[];
/**
 * The ordered list of questions, answers, and their metadata for the application
 */
export type Responses = QuestionAndResponses[];

/**
 * The root specification for a planning application in England generated by a digital planning service
 */
export interface Application {
  data: {
    applicant: Applicant;
    application: ApplicationData;
    files?: FilesAsData;
    property: Property;
    proposal: Proposal;
    user: User;
  };
  files: File[];
  metadata: DigitalPlanningMetadata;
  preAssessment?: PreAssessment;
  responses: Responses;
}
/**
 * Information about the user who completed the application for themself, or information about the person who the user applied on behalf of
 */
export interface BaseApplicant {
  address: UserAddress;
  company?: {
    name: string;
  };
  email: Email;
  maintenanceContact?: MaintenanceContact;
  name: {
    first: string;
    last: string;
    title?: string;
  };
  ownership?: Ownership;
  phone: {
    primary: string;
  };
  siteContact: SiteContact;
  type: "individual" | "company" | "charity" | "public" | "parishCouncil";
}
/**
 * Address information for an applicant with contact information that differs from the property address
 */
export interface UserAddressNotSameSite {
  country?: string;
  county?: string;
  line1: string;
  line2?: string;
  postcode: string;
  sameAsSiteAddress: false;
  town: string;
}
/**
 * Address information for a person associated with this application not at the property address
 */
export interface Address {
  country?: string;
  county?: string;
  line1: string;
  line2?: string;
  postcode: string;
  town: string;
}
/**
 * Information about the ownership certificate and property owners, if different than the applicant
 */
export interface Ownership {
  /**
   * Does the land have any agricultural tenants?
   */
  agriculturalTenants?: boolean;
  certificate?: "a" | "b" | "c" | "d";
  /**
   * Declaration of the accuracy of the ownership certificate, including reasonable steps taken to find all owners and publish notice
   */
  declaration?: {
    accurate: true;
  };
  interest?:
    | "owner"
    | "owner.sole"
    | "owner.co"
    | "lessee"
    | "occupier"
    | "other";
  /**
   * Has requisite notice been given to all the known owners and agricultural tenants?
   */
  noticeGiven?: boolean;
  /**
   * Has a notice of the application been published in a newspaper circulating in the area where the land is situated?
   */
  noticePublished?: {
    date?: Date;
    newspaperName?: string;
    status: boolean;
  };
  owners?: Owners[];
  /**
   * Do you know the names and addresses of all owners and agricultural tenants?
   */
  ownersKnown?: "all" | "some" | "none";
}
export interface OwnersNoticeGiven {
  address: Address | string;
  interest?: "owner" | "lessee" | "occupier" | "other";
  name: string;
  noticeGiven: true;
}
export interface OwnersNoNoticeGiven {
  address: Address | string;
  interest?: "owner" | "lessee" | "occupier" | "other";
  name: string;
  noNoticeReason: string;
  noticeGiven: false;
}
export interface OwnersNoticeDate {
  address: Address | string;
  interest?: "owner" | "lessee" | "occupier" | "other";
  name: string;
  noticeDate: Date;
}
/**
 * Contact information for the site visit when the SiteContact's role is 'other'
 */
export interface SiteContactOther {
  email: string;
  name: string;
  phone: string;
  role: "other";
}
/**
 * Information about the agent or proxy who completed the application on behalf of someone else
 */
export interface Agent {
  address: UserAddress;
  agent: {
    address: Address;
    company?: {
      name: string;
    };
    email: Email;
    name: {
      first: string;
      last: string;
      title?: string;
    };
    phone: {
      primary: string;
    };
  };
  company?: {
    name: string;
  };
  email: Email;
  maintenanceContact?: MaintenanceContact;
  name: {
    first: string;
    last: string;
    title?: string;
  };
  ownership?: Ownership;
  phone: {
    primary: string;
  };
  siteContact: SiteContact;
  type: "individual" | "company" | "charity" | "public" | "parishCouncil";
}
export interface BaseApplicationData {
  CIL?: CommunityInfrastructureLevy;
  declaration: ApplicationDeclaration;
  fee: ApplicationFee | ApplicationFeeNotApplicable;
  planningApp?: PlanningApplication;
  preApp?: PreApplication;
  type: ApplicationType;
}
/**
 * Details about the Community Infrastructure Levy planning charge, if applicable
 */
export interface CommunityInfrastructureLevy {
  result:
    | "exempt.annexe"
    | "exempt.extension"
    | "exempt.selfBuild"
    | "liable"
    | "relief.charity"
    | "relief.socialHousing";
}
/**
 * Declarations about the accuracy of this application and any personal connections to the receiving authority
 */
export interface ApplicationDeclaration {
  accurate: boolean;
  connection: {
    description?: string;
    value:
      | "employee"
      | "relation.employee"
      | "electedMember"
      | "relation.electedMember"
      | "none";
  };
}
/**
 * The costs associated with this application
 */
export interface ApplicationFee {
  /**
   * Total calculated fee in GBP
   */
  calculated: number;
  /**
   * Breakdown of calculated fee in GBP by category of development, based on the scales defined in The Town and Country Planning Regulations https://www.legislation.gov.uk/uksi/2012/2920/schedule/1/part/2
   */
  category?: {
    /**
     * Category 8 - Car parks or access roads
     */
    eight?: number;
    eleven?: {
      /**
       * Category 11(1) - Mining operations
       */
      one?: number;
      /**
       * Category 11(2) - Other operations
       */
      two?: number;
    };
    /**
     * Category 5 - Plant equipment or machinery
     */
    five?: number;
    /**
     * Category 4 - Glasshouses on agricultural land
     */
    four?: number;
    /**
     * Category 14 - Other change of use
     */
    fourteen?: number;
    /**
     * Category 9 - Exploratory drilling
     */
    nine?: number;
    /**
     * Category 1 - New homes
     */
    one?: number;
    /**
     * Category 6 and 7 - Home or curtilage of home
     */
    sixAndSeven?: number;
    /**
     * Category 10 - Winning and working of oil or natural gas
     */
    ten?: number;
    /**
     * Category 13 - Waste disposal
     */
    thirteen?: number;
    /**
     * Category 3 - Agricultural buildings
     */
    three?: number;
    twelve?: {
      /**
       * Category 12(1) - Change of use from single home to homes
       */
      one?: number;
      /**
       * Category 12(2) - Change of use to home
       */
      two?: number;
    };
    /**
     * Category 2 - Other new buildings
     */
    two?: number;
  };
  exemption: {
    disability: boolean;
    resubmission: boolean;
  };
  /**
   * Total payable fee after any exemptions or reductions in GBP
   */
  payable: number;
  reduction: {
    alternative: boolean;
    parishCouncil: boolean;
    sports: boolean;
  };
  reference?: {
    /**
     * GOV.UK Pay payment reference number
     */
    govPay: string;
  };
}
/**
 * An indicator that an application fee does not apply to this application type or journey
 */
export interface ApplicationFeeNotApplicable {
  notApplicable: true;
}
/**
 * Details of the planning application linked to this application, if applicable
 */
export interface PlanningApplication {
  date: Date;
  localPlanningAuthority: string;
  reference: string;
}
/**
 * Details of the pre-application preceeding this application, if applicable
 */
export interface PreApplication {
  date: Date;
  officer: string;
  reference: string;
  summary: string;
}
/**
 * Application details for project sites within the Greater London Authority (GLA) area
 */
export interface LondonApplicationData {
  CIL?: CommunityInfrastructureLevy;
  declaration: ApplicationDeclaration;
  fee: ApplicationFee | ApplicationFeeNotApplicable;
  leadDeveloper?: LeadDeveloper;
  planningApp?: PlanningApplication;
  preApp?: PreApplication;
  type: ApplicationType;
  vacantBuildingCredit?: boolean;
}
export interface LeadDeveloper {
  company?: {
    name: string;
    registrationNumber: string;
  };
  type: "ukCompany" | "overseasCompany" | "none";
}
/**
 * File types that can optionally be provided by answering structured questions, rather than via document upload (see root `files` for uploads)
 */
export interface FilesAsData {
  designAndAccessStatement?: DesignAndAccessStatement;
  heritageStatement?: HeritageStatement;
  locationPlan?: GeoBoundary;
}
export interface DesignAndAccessStatement {
  accessAndLayout: string;
  landscapingChanges: string;
  projectDescription: string;
  propertyDescription: string;
}
export interface HeritageStatement {
  "designated.WHS"?: HeritageStatementBase;
  "designated.conservationArea"?: HeritageStatementBase;
  listed?: HeritageStatementBase;
  monument?: HeritageStatementBase;
}
export interface HeritageStatementBase {
  designationDescription: string;
  improvements: string;
  managedImpact: string;
  projectDescpription: string;
  propertyDescription: string;
}
export interface GeoBoundary {
  area: Area;
  site: GeoJSON;
}
export interface Area {
  hectares?: number;
  squareMetres: number;
}
/**
 * Point geometry object. https://tools.ietf.org/html/rfc7946#section-3.1.2
 */
export interface Point {
  /**
   * Bounding box of the coordinate range of the object's Geometries, Features, or Feature Collections. The value of the bbox member is an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries. https://tools.ietf.org/html/rfc7946#section-5
   */
  bbox?:
    | [number, number, number, number]
    | [number, number, number, number, number, number];
  coordinates: Position;
  /**
   * Specifies the type of GeoJSON object.
   */
  type: "Point";
}
/**
 * MultiPoint geometry object.  https://tools.ietf.org/html/rfc7946#section-3.1.3
 */
export interface MultiPoint {
  /**
   * Bounding box of the coordinate range of the object's Geometries, Features, or Feature Collections. The value of the bbox member is an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries. https://tools.ietf.org/html/rfc7946#section-5
   */
  bbox?:
    | [number, number, number, number]
    | [number, number, number, number, number, number];
  coordinates: Position[];
  /**
   * Specifies the type of GeoJSON object.
   */
  type: "MultiPoint";
}
/**
 * LineString geometry object. https://tools.ietf.org/html/rfc7946#section-3.1.4
 */
export interface LineString {
  /**
   * Bounding box of the coordinate range of the object's Geometries, Features, or Feature Collections. The value of the bbox member is an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries. https://tools.ietf.org/html/rfc7946#section-5
   */
  bbox?:
    | [number, number, number, number]
    | [number, number, number, number, number, number];
  coordinates: Position[];
  /**
   * Specifies the type of GeoJSON object.
   */
  type: "LineString";
}
/**
 * MultiLineString geometry object. https://tools.ietf.org/html/rfc7946#section-3.1.5
 */
export interface MultiLineString {
  /**
   * Bounding box of the coordinate range of the object's Geometries, Features, or Feature Collections. The value of the bbox member is an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries. https://tools.ietf.org/html/rfc7946#section-5
   */
  bbox?:
    | [number, number, number, number]
    | [number, number, number, number, number, number];
  coordinates: Position[][];
  /**
   * Specifies the type of GeoJSON object.
   */
  type: "MultiLineString";
}
/**
 * Polygon geometry object. https://tools.ietf.org/html/rfc7946#section-3.1.6
 */
export interface Polygon {
  /**
   * Bounding box of the coordinate range of the object's Geometries, Features, or Feature Collections. The value of the bbox member is an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries. https://tools.ietf.org/html/rfc7946#section-5
   */
  bbox?:
    | [number, number, number, number]
    | [number, number, number, number, number, number];
  coordinates: Position[][];
  /**
   * Specifies the type of GeoJSON object.
   */
  type: "Polygon";
}
/**
 * MultiPolygon geometry object. https://tools.ietf.org/html/rfc7946#section-3.1.7
 */
export interface MultiPolygon {
  /**
   * Bounding box of the coordinate range of the object's Geometries, Features, or Feature Collections. The value of the bbox member is an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries. https://tools.ietf.org/html/rfc7946#section-5
   */
  bbox?:
    | [number, number, number, number]
    | [number, number, number, number, number, number];
  coordinates: Position[][][];
  /**
   * Specifies the type of GeoJSON object.
   */
  type: "MultiPolygon";
}
/**
 * Geometry Collection https://tools.ietf.org/html/rfc7946#section-3.1.8
 */
export interface GeometryCollection {
  /**
   * Bounding box of the coordinate range of the object's Geometries, Features, or Feature Collections. The value of the bbox member is an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries. https://tools.ietf.org/html/rfc7946#section-5
   */
  bbox?:
    | [number, number, number, number]
    | [number, number, number, number, number, number];
  geometries: Geometry[];
  /**
   * Specifies the type of GeoJSON object.
   */
  type: "GeometryCollection";
}
/**
 * A feature object which contains a geometry and associated properties. https://tools.ietf.org/html/rfc7946#section-3.2
 */
export interface Feature {
  /**
   * Bounding box of the coordinate range of the object's Geometries, Features, or Feature Collections. The value of the bbox member is an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries. https://tools.ietf.org/html/rfc7946#section-5
   */
  bbox?:
    | [number, number, number, number]
    | [number, number, number, number, number, number];
  /**
   * Geometry object. https://tools.ietf.org/html/rfc7946#section-3
   */
  geometry:
    | Point
    | MultiPoint
    | LineString
    | MultiLineString
    | Polygon
    | MultiPolygon
    | GeometryCollection;
  /**
   * A value that uniquely identifies this feature in a https://tools.ietf.org/html/rfc7946#section-3.2.
   */
  id?: string | number;
  /**
   * Properties associated with this feature.
   */
  properties: {
    [k: string]: unknown;
  } | null;
  /**
   * Specifies the type of GeoJSON object.
   */
  type: "Feature";
}
/**
 * A collection of feature objects.  https://tools.ietf.org/html/rfc7946#section-3.3
 */
export interface FeatureCollection {
  /**
   * Bounding box of the coordinate range of the object's Geometries, Features, or Feature Collections. The value of the bbox member is an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries. https://tools.ietf.org/html/rfc7946#section-5
   */
  bbox?:
    | [number, number, number, number]
    | [number, number, number, number, number, number];
  features: Feature3CGeometry2CGeoJsonProperties3E[];
  /**
   * Specifies the type of GeoJSON object.
   */
  type: "FeatureCollection";
}
/**
 * A feature object which contains a geometry and associated properties. https://tools.ietf.org/html/rfc7946#section-3.2
 */
export interface Feature3CGeometry2CGeoJsonProperties3E {
  /**
   * Bounding box of the coordinate range of the object's Geometries, Features, or Feature Collections. The value of the bbox member is an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries. https://tools.ietf.org/html/rfc7946#section-5
   */
  bbox?:
    | [number, number, number, number]
    | [number, number, number, number, number, number];
  /**
   * Geometry object. https://tools.ietf.org/html/rfc7946#section-3
   */
  geometry:
    | Point
    | MultiPoint
    | LineString
    | MultiLineString
    | Polygon
    | MultiPolygon
    | GeometryCollection;
  /**
   * A value that uniquely identifies this feature in a https://tools.ietf.org/html/rfc7946#section-3.2.
   */
  id?: string | number;
  /**
   * Properties associated with this feature.
   */
  properties: {
    [k: string]: unknown;
  } | null;
  /**
   * Specifies the type of GeoJSON object.
   */
  type: "Feature";
}
/**
 * Property details for sites anywhere in the UK
 */
export interface UKProperty {
  address: ProposedAddress | OSAddress;
  boundary?: GeoBoundary1;
  /**
   * Existing flood risk, if applicable to application.type
   */
  flood?: {
    "20mFromWatercourse"?: boolean;
    increasedRiskElsewhere?: boolean;
  };
  /**
   * Current and historic UK Local Authority Districts that contain this address sourced from planning.data.gov.uk/dataset/local-authority-district
   */
  localAuthorityDistrict: string[];
  materials?: Materials;
  /**
   * Planning constraints and policies that intersect with this site and may impact or restrict development
   */
  planning?: {
    conditions?: PlanningConstraint[];
    designations?: PlanningDesignation[];
    guidance?: PlanningConstraint[];
    plans?: {
      local: PlanningConstraint[];
      neighbourhood: PlanningConstraint[];
    };
    /**
     * A list of open data requests or websites that explain how these constraints were sourced
     */
    sources: URL[];
  };
  region: UKRegion;
  /**
   * Existing trees on or near the site
   */
  trees?: {
    adjacent: boolean;
    present: boolean;
  };
  type: PropertyType;
  units?: ResidentialUnits;
  /**
   * Existing land use, if applicable to application.type
   */
  use?: {
    description: string;
    vacant?: {
      lastUseEndDate: Date;
    };
  };
}
/**
 * Address information for sites without a known Unique Property Reference Number (UPRN)
 */
export interface ProposedAddress {
  /**
   * Latitude coordinate in EPSG:4326 (WGS84)
   */
  latitude: number;
  /**
   * Longitude coordinate in EPSG:4326 (WGS84)
   */
  longitude: number;
  source: "Proposed by applicant";
  title: string;
  /**
   * Easting coordinate in British National Grid (OSGB36)
   */
  x: number;
  /**
   * Northing coordinate in British National Grid (OSGB36)
   */
  y: number;
}
/**
 * Address information for sites with a known address sourced from Ordnance Survey AddressBase Premium
 */
export interface OSAddress {
  /**
   * Latitude coordinate in EPSG:4326 (WGS84)
   */
  latitude: number;
  /**
   * Longitude coordinate in EPSG:4326 (WGS84)
   */
  longitude: number;
  organisation?: string;
  pao: PrimaryAddressableObjectStartRangeAndOrBuildingDescription;
  paoEnd?: PrimaryAddressableObjectPAOEndRange;
  postcode: string;
  sao?: SecondaryAddressableObjectSAOStartRangeAndOrBuildingDescription;
  saoEnd?: SecondaryAddressableObjectSAOEndRange;
  singleLine: string;
  source: "Ordnance Survey";
  street: string;
  title: string;
  town: string;
  uprn: UniquePropertyReferenceNumber;
  usrn: UniqueStreetReferenceNumber;
  /**
   * Easting coordinate in British National Grid (OSGB36)
   */
  x: number;
  /**
   * Northing coordinate in British National Grid (OSGB36)
   */
  y: number;
}
/**
 * HM Land Registry Index polygon for this property, commonly referred to as the blue line boundary, sourced from planning.data.gov.uk/dataset/title-boundary
 */
export interface GeoBoundary1 {
  area: Area;
  site: GeoJSON;
}
/**
 * Existing materials, if applicable to proposal.projectType
 */
export interface Materials {
  boundary?: string;
  door?: string;
  lighting?: string;
  other?: string;
  roof?: string;
  surface?: string;
  wall?: string;
  window?: string;
}
export interface Entity {
  description?: string;
  name: string;
  source:
    | {
        text: "Planning Data";
        url: URL;
      }
    | {
        text: "Ordnance Survey MasterMap Highways";
      };
}
export interface ResidentialUnits {
  residential: {
    bedrooms: number;
    identicalUnits: number;
    tenure: UKTenureType;
    type: UKResidentialUnitType;
  }[];
  total: number;
}
/**
 * Property details for sites within the Greater London Authority (GLA) area
 */
export interface LondonProperty {
  EPC?: EnergyPerformanceCertificate;
  address: ProposedAddress | OSAddress;
  boundary?: GeoBoundary2;
  /**
   * Existing flood risk, if applicable to application.type
   */
  flood?: {
    "20mFromWatercourse"?: boolean;
    increasedRiskElsewhere?: boolean;
  };
  /**
   * Current and historic UK Local Authority Districts that contain this address sourced from planning.data.gov.uk/dataset/local-authority-district
   */
  localAuthorityDistrict: string[];
  materials?: Materials1;
  /**
   * Current occupation status of the property
   */
  occupation?: {
    status: "occupied" | "partVacant" | "vacant";
  };
  /**
   * Current ownership status of the land
   */
  ownership?: {
    status: "public" | "private" | "mixed";
  };
  parking?: {
    buses?: {
      count: number;
    };
    carClub?: {
      count: number;
    };
    cars?: {
      count: number;
    };
    cycles?: {
      count: number;
    };
    disabled?: {
      count: number;
    };
    motorcycles?: {
      count: number;
    };
    offStreet?: {
      residential: {
        count: number;
      };
    };
    other?: {
      count: number;
    };
    vans?: {
      count: number;
    };
  };
  /**
   * Planning constraints and policies that intersect with this site and may impact or restrict development
   */
  planning?: {
    conditions?: PlanningConstraint[];
    designations?: PlanningDesignation[];
    guidance?: PlanningConstraint[];
    plans?: {
      local: PlanningConstraint[];
      neighbourhood: PlanningConstraint[];
    };
    /**
     * A list of open data requests or websites that explain how these constraints were sourced
     */
    sources: URL[];
  };
  region: "London";
  socialLandlord?: LeadRegisteredSocialLandlord;
  titleNumber?: {
    known: "Yes" | "No";
    number?: string;
  };
  /**
   * Existing trees on or near the site
   */
  trees?: {
    adjacent: boolean;
    present: boolean;
  };
  type: PropertyType;
  units?: ResidentialUnits;
  /**
   * Existing land use, if applicable to application.type
   */
  use?: {
    description: string;
    vacant?: {
      lastUseEndDate: Date;
    };
  };
}
export interface EnergyPerformanceCertificate {
  known:
    | "Yes"
    | "Yes, but only some of the properties have one"
    | "The property does not have one"
    | "No";
  number?: string;
}
/**
 * HM Land Registry Index polygon for this property, commonly referred to as the blue line boundary, sourced from planning.data.gov.uk/dataset/title-boundary
 */
export interface GeoBoundary2 {
  area: Area;
  site: GeoJSON;
}
/**
 * Existing materials, if applicable to proposal.projectType
 */
export interface Materials1 {
  boundary?: string;
  door?: string;
  lighting?: string;
  other?: string;
  roof?: string;
  surface?: string;
  wall?: string;
  window?: string;
}
export interface BaseProposal {
  access?: {
    affected?:
      | "vehicle"
      | "pedestrian"
      | "newRoad"
      | "rightsOfWay.newPublic"
      | "rightsOfWay.changes";
  };
  boundary?: GeoBoundary3;
  date?: ProposalDates;
  description: string;
  /**
   * Details of biodiversity and geological conservation, if applicable to application.type
   */
  ecology?: {
    conservationAffected?: "site" | "adjacent" | "none";
    featuresAffected?: "site" | "adjacent" | "none";
    speciesAffected?: "site" | "adjacent" | "none";
  };
  environmentalImpactDescription?: string;
  extend?: {
    area: Area;
  };
  /**
   * Assessment of flood risk, if applicable to application.type
   */
  flood?: {
    surfaceWaterDisposal?:
      | "drainageSystem"
      | "soakaway"
      | "sewer"
      | "watercourse"
      | "pondOrLake"
      | "other";
  };
  materials?: Materials2;
  new?: {
    area: Area;
    count?: {
      bathrooms?: number;
      bedrooms?: number;
      dwellings?: number;
    };
  };
  newDwellings?: {
    newBuild?: {
      count: number;
    };
  };
  projectType: ProjectType[];
  structures?: {
    permanent?: {
      count: number;
    };
    temporary?: {
      count: number;
    };
    total: number;
    type:
      | "bridge"
      | "catchpit"
      | "culvert"
      | "pipe"
      | "gully"
      | "headwall"
      | "manhole"
      | "weir"
      | "other";
  };
  units?: ResidentialUnits;
  /**
   * Proposed land use, including storage of hazardous materials, if applicable to application.type
   */
  use?: {
    contamination?: "known" | "suspected" | "vulnerable";
    description?: string;
    storage?: string[];
  };
  /**
   * Proposed utilities, if applicable to application.type
   */
  utilities?: {
    /**
     * Whether the proposal introduces a fire suppression system
     */
    fire?: {
      suppression: boolean;
    };
    /**
     * Type of proposed foul sewage disposal
     */
    foulSewageDisposal?: "sewer" | "tank" | "plant" | "pit" | "other";
    /**
     * Count of new gas connections
     */
    gas?: {
      connections: {
        count: number;
      };
    };
    /**
     * Count of new full fibre Internet connections
     */
    internet?: {
      commercialUnits: {
        count: number;
      };
      residentialUnits: {
        count: number;
      };
    };
    /**
     * Count of new water connections
     */
    water?: {
      connections: {
        count: number;
      };
    };
  };
  watercourse?: {
    name: string;
    type: "ditch" | "millStream" | "pond" | "river" | "streamOrBrook" | "other";
  };
}
/**
 * Location plan boundary proposed by the user, commonly referred to as the red line boundary
 */
export interface GeoBoundary3 {
  area: Area;
  site: GeoJSON;
}
/**
 * When the proposed works will start and be completed by, not required for all application types
 */
export interface ProposalDates {
  completion?: Date;
  start?: Date;
}
/**
 * Proposed materials, if applicable to projectType
 */
export interface Materials2 {
  boundary?: string;
  door?: string;
  lighting?: string;
  other?: string;
  roof?: string;
  surface?: string;
  wall?: string;
  window?: string;
}
/**
 * Proposal details for project sites within the Greater London Authority (GLA) area
 */
export interface LondonProposal {
  access?: {
    affected?:
      | "vehicle"
      | "pedestrian"
      | "newRoad"
      | "rightsOfWay.newPublic"
      | "rightsOfWay.changes";
  };
  boundary?: GeoBoundary4;
  /**
   * Electric vehicle charing points
   */
  charging?: {
    active?: {
      count: number;
    };
    passive?: {
      count: number;
    };
  };
  /**
   * Project cost
   */
  cost?: {
    projected: "2m" | "2mTo100m" | "100m";
  };
  date?: ProposalDates;
  description: string;
  /**
   * Details of biodiversity and geological conservation, if applicable to application.type
   */
  ecology?: {
    conservationAffected?: "site" | "adjacent" | "none";
    featuresAffected?: "site" | "adjacent" | "none";
    speciesAffected?: "site" | "adjacent" | "none";
  };
  /**
   * Proposed energy sources
   */
  energy?: {
    communityOwned?: {
      /**
       * Proposed total capacity of any on-site community-owned energy generation in megawatts (mW)
       */
      capacity: {
        megawatts: number;
      };
    };
    heatPumps?: {
      /**
       * Proposed total capacity of any heat pumps in megawatts (mV)
       */
      capacity: {
        megawatts: number;
      };
    };
    solar?: {
      /**
       * Proposed total capacity of any solar energy generation in megawatts (mV)
       */
      capacity: {
        megawatts: number;
      };
    };
    type: ("communityOwned" | "heatPump" | "solar")[];
  };
  environmentalImpactDescription?: string;
  extend?: {
    area: Area;
  };
  /**
   * Assessment of flood risk, if applicable to application.type
   */
  flood?: {
    surfaceWaterDisposal?:
      | "drainageSystem"
      | "soakaway"
      | "sewer"
      | "watercourse"
      | "pondOrLake"
      | "other";
  };
  /**
   * Green roof
   */
  greenRoof?: {
    area: Area;
  };
  materials?: Materials3;
  /**
   * Changes that result in the loss, gain, or change of use of natural spaces
   */
  nature?: {
    openSpaces?: {
      access: "restricted" | "unrestricted";
      area: {
        hectares: number;
      };
      description: string;
      designation: OpenSpaceDesignation;
      impact: "loss" | "gain" | "change";
      /**
       * Whether the open space change involves a land swap
       */
      swap: boolean;
      type: OpenSpaceType;
    }[];
    protectedSpaces?: {
      access: "restricted" | "unrestricted";
      area: {
        hectares: number;
      };
      description: string;
      designation: ProtectedSpaceDesignation;
      impact: "loss" | "gain" | "change";
    }[];
  };
  new?: {
    area: Area;
    count?: {
      bathrooms?: number;
      bedrooms?: number;
      dwellings?: number;
    };
  };
  newBuildings?: NewBuildingsOrStoreys;
  newDwellings?: {
    newBuild?: {
      count: number;
    };
  };
  newStoreys?: NewBuildingsOrStoreys1;
  /**
   * Proposed parking spaces
   */
  parking?: {
    buses?: {
      count: number;
      difference: number;
    };
    carClub?: {
      count: number;
      difference: number;
    };
    cars?: {
      count: number;
      difference: number;
    };
    cycles?: {
      count: number;
      difference: number;
    };
    disabled?: {
      count: number;
      difference: number;
    };
    motorcycles?: {
      count: number;
      difference: number;
    };
    offStreet?: {
      residential: {
        count: number;
        difference: number;
      };
    };
    other?: {
      count: number;
      difference: number;
    };
    vans?: {
      count: number;
      difference: number;
    };
  };
  projectType: ProjectType[];
  schemeName?: string;
  structures?: {
    permanent?: {
      count: number;
    };
    temporary?: {
      count: number;
    };
    total: number;
    type:
      | "bridge"
      | "catchpit"
      | "culvert"
      | "pipe"
      | "gully"
      | "headwall"
      | "manhole"
      | "weir"
      | "other";
  };
  units?: {
    residential: {
      new?: {
        area: Area;
        bedrooms: number;
        compliance: BuildingRegulation[];
        development: DevelopmentType;
        garden: boolean;
        habitableRooms: number;
        identicalUnits: number;
        olderPersons: boolean;
        provider: GLAHousingProvider;
        sheltered: boolean;
        tenure: GLATenureType;
        type: GLAResidentialUnitType;
      }[];
      rebuilt?: {
        area: Area;
        bedrooms: number;
        compliance: BuildingRegulation[];
        development: DevelopmentType;
        garden: boolean;
        habitableRooms: number;
        identicalUnits: number;
        olderPersons: boolean;
        provider: GLAHousingProvider;
        sheltered: boolean;
        tenure: GLATenureType;
        type: GLAResidentialUnitType;
      }[];
      removed?: {
        area: Area;
        bedrooms: number;
        compliance: BuildingRegulation[];
        habitableRooms: number;
        identicalUnits: number;
        olderPersons: boolean;
        provider: GLAHousingProvider;
        sheltered: boolean;
        tenure: GLATenureType;
        type: GLAResidentialUnitType;
      }[];
      retained?: {
        bedrooms: number;
        identicalUnits: number;
        tenure: GLATenureType;
        type: GLAResidentialUnitType;
      }[];
    };
  };
  /**
   * Urban Greening Factor Score
   */
  urbanGreeningFactor?: {
    score: number;
  };
  /**
   * Proposed land use, including storage of hazardous materials, if applicable to application.type
   */
  use?: {
    contamination?: "known" | "suspected" | "vulnerable";
    description?: string;
    storage?: string[];
  };
  /**
   * Proposed utilities, if applicable to application.type
   */
  utilities?: {
    /**
     * Whether the proposal introduces a fire suppression system
     */
    fire?: {
      suppression: boolean;
    };
    /**
     * Type of proposed foul sewage disposal
     */
    foulSewageDisposal?: "sewer" | "tank" | "plant" | "pit" | "other";
    /**
     * Count of new gas connections
     */
    gas?: {
      connections: {
        count: number;
      };
    };
    /**
     * Count of new full fibre Internet connections
     */
    internet?: {
      commercialUnits: {
        count: number;
      };
      residentialUnits: {
        count: number;
      };
    };
    /**
     * Count of new water connections
     */
    water?: {
      connections: {
        count: number;
      };
    };
  };
  /**
   * Waste management of demolition and construction materials
   */
  waste?: {
    reuseRecycle: {
      percent: number;
    };
  };
  /**
   * Water management
   */
  water?: {
    /**
     * Whether the proposal includes grey water re-use
     */
    grey: boolean;
    /**
     * Whether the proposal includes rain water harvesting
     */
    rain: boolean;
    /**
     * Internal residential water usage
     */
    usage: {
      litresPerPersonPerDay: number;
    };
  };
  watercourse?: {
    name: string;
    type: "ditch" | "millStream" | "pond" | "river" | "streamOrBrook" | "other";
  };
}
/**
 * Location plan boundary proposed by the user, commonly referred to as the red line boundary
 */
export interface GeoBoundary4 {
  area: Area;
  site: GeoJSON;
}
/**
 * Proposed materials, if applicable to projectType
 */
export interface Materials3 {
  boundary?: string;
  door?: string;
  lighting?: string;
  other?: string;
  roof?: string;
  surface?: string;
  wall?: string;
  window?: string;
}
/**
 * Creating new buildings
 */
export interface NewBuildingsOrStoreys {
  buildings?: {
    height: {
      metres: number;
    };
    storeys: number;
  }[];
  count: number;
}
/**
 * Increasing the height of existing buildings
 */
export interface NewBuildingsOrStoreys1 {
  buildings?: {
    height: {
      metres: number;
    };
    storeys: number;
  }[];
  count: number;
}
/**
 * The role of the user who completed the application
 */
export interface User {
  role: "applicant" | "agent" | "proxy";
}
/**
 * File uploaded and labeled by the user to support the application
 */
export interface File {
  description?: string;
  name: string;
  type: FileType[];
}
/**
 * Base metadata associated with applications submitted via any provider
 */
export interface AnyProviderMetadata {
  /**
   * Unique identifier for this application
   */
  id: string;
  /**
   * The reference code for the organisation responsible for processing this planning application, sourced from planning.data.gov.uk/dataset/local-authority
   */
  organisation: string;
  schema: URL;
  source: "Any";
  submittedAt: DateTime;
}
/**
 * Additional metadata associated with applications submitted via PlanX
 */
export interface PlanXMetadata {
  /**
   * Unique identifier for this application
   */
  id: string;
  /**
   * The reference code for the organisation responsible for processing this planning application, sourced from planning.data.gov.uk/dataset/local-authority
   */
  organisation: string;
  schema: URL;
  service: {
    fee: FeeExplanation | FeeExplanationNotApplicable;
    files: RequestedFiles;
    flowId: UUID;
    url: URL;
  };
  source: "PlanX";
  submittedAt: DateTime;
}
/**
 * An explanation, including policy references, of the fees associated with this application
 */
export interface FeeExplanation {
  calculated: CalculateMetadata[];
  /**
   * Breakdown of calculated fee by category of development, based on the scales defined in The Town and Country Planning Regulations https://www.legislation.gov.uk/uksi/2012/2920/schedule/1/part/2
   */
  category?: {
    eight?: CalculateMetadata[];
    eleven?: {
      one: CalculateMetadata[];
    };
    five?: CalculateMetadata[];
    four?: CalculateMetadata[];
    fourteen?: CalculateMetadata[];
    nine?: CalculateMetadata[];
    one?: CalculateMetadata[];
    sixAndSeven?: CalculateMetadata[];
    ten?: CalculateMetadata[];
    thirteen?: CalculateMetadata[];
    three?: CalculateMetadata[];
    twelve?: {
      one?: CalculateMetadata[];
      two?: CalculateMetadata[];
    };
    two?: CalculateMetadata[];
  };
  payable: CalculateMetadata[];
}
/**
 * Metadata associated with PlanX Calculate components used to determine fees throughout a service
 */
export interface CalculateMetadata {
  description?: string;
  policyRefs?: {
    text: string;
    url?: URL;
  }[];
}
/**
 * An indicator that an application fee does not apply to this application type or journey, therefore there is not an explanation of how it was calculated
 */
export interface FeeExplanationNotApplicable {
  notApplicable: true;
}
/**
 * File types requested by this service. Schema["files"] will be a subset of this list based on the user's journey through the service
 */
export interface RequestedFiles {
  optional: FileType[];
  recommended: FileType[];
  required: FileType[];
}
export interface QuestionAndResponses {
  metadata?: QuestionMetaData;
  question: string;
  responses: Response[] | string;
}
export interface QuestionMetaData {
  autoAnswered?: boolean;
  policyRefs?: {
    text: string;
    url?: URL;
  }[];
  sectionName?: string;
}
export interface Response {
  metadata?: ResponseMetaData;
  value: string;
}
export interface ResponseMetaData {
  flags?: string[];
  options?: string[] | Response[];
}
